{"version":3,"sources":["webpack:///admin.min.js","webpack:///webpack/bootstrap f6c3fcecda4bc844642c","webpack:///./_src/admin/js/admin-app.js","webpack:///./_src/admin/js/admin-caching.js","webpack:///./_src/admin/js/admin-cloudflare.js","webpack:///./_src/admin/js/admin-dashboard-cloudflare.js","webpack:///./_src/admin/js/admin-dashboard.js","webpack:///./_src/admin/js/admin-gzip.js","webpack:///./_src/admin/js/admin-main.js","webpack:///./_src/admin/js/admin-minification.js","webpack:///./_src/admin/js/admin-performance.js","webpack:///./_src/admin/js/admin-uptime.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","jQuery","document","ready","WPHB_Admin","init","on","e","this","toggleClass","$","caching","selectedServer","$serverSelector","$serverInstructions","$expirySelectors","$snippets","self","cachingMetabox","cachingContent","find","cachingContentSpinner","cachingFooter","wphbCachingStrings","strings","val","apache","first","nginx","each","element","data","type","change","hide","fadeIn","ajax","url","ajaxurl","method","action","wphb_nonce","setExpirationNonce","nonce_name","module_action","done","response","reloadSnippets","showServerInstructions","hideCurrentInstructions","setServer","click","preventDefault","slideToggle","setServerNonce","selected","server","show","success","result","text","code","updatedFile","location","href","recheckURL","cacheEnabled","htaccessErrorURL","cloudflare","$cfSelector","$spinner","wphb","is","connected","setExpiry","selector","displaySpinner","request","security","nonces","expiry","post","window","reload","css","DashboardCloudFlare","settings","currentStep","email","apiKey","$stepsContainer","$infoBox","$deactivateButton","renderStep","purgeCache","apply","target","bind","$button","attr","showSpinner","$notice","scrollTo","slideDown","setTimeout","slideUp","always","removeAttr","hideSpinner","step","template","content","html","submitStep","bindEvents","$howToInstructions","toggle","WDP","wpmuSelect","removeClass","addClass","emptyInfoBox","showInfoBox","message","$form","formData","serialize","cfData","newData","nextStep","error","redirect","jqXHR","textStatus","errorThrown","_","memoize","id","compiled","options","evaluate","interpolate","escape","variable","templateSettings","dashboard","wphbDashboardStrings","removeWelcomeBoxNonce","activateMinificationNonce","notice","advancedSettingsNonce","utils","startQuickSetup","args","class","showOverlay","gzip","wphbGZipStrings","updatePerformanceGraph","$wrap","r","pct","$item","parseInt","$circle","Math","PI","strokeDashoffset","updatePerformanceResultsGraphs","register_events_performance","initModule","getModule","membershipModal","open","trigger","notices","parent","minification","$checkFilesButton","$checkFilesResultsContainer","checkURLSList","checkedURLS","wphbMinificationStrings","$disableMinification","length","checkFiles","finishedCheckURLsLink","confirm","discardAlert","timer","clearTimeout","toggleMinificationNonce","rowsCollection","RowsCollection","index","row","_row","Row","push","keyup","addFilter","applyFilters","what","prop","visibleItems","getVisibleItems","$this","getItemById","select","unSelect","checkbox","getElement","checkboxes","checkedState","checked","innerWidth","minification_resize_rows","debounce","addEventListener","minificationStarted","checkFilesNonce","progress","sessionStorage","getItem","round","results","finished","clear","width","show_cnd","setItem","steps","_element","_filter","_filter_sec","$el","filter","toLowerCase","filterSecondary","visible","$include","$combine","$minify","$posFooter","$disableIcon","getId","getFilter","matchFilter","search","matchSecondaryFilter","isVisible","isSelected","items","currentFilter","currentSecondaryFilter","getItems","getSelectedItems","performance","iteration","wphbPerformanceStrings","$runTestButton","off","getParentPerformanceItem","closest","getNextAdditionalContentRow","nextUntil","hasClass","performanceTest","finishedTestURLsLink","hash","remove","that","user","beforeSend","user_row","append","src","avatar","is_current","youLabelText","data-id","user_id","removeButtonText","appendTo","form_data","performanceSaveSettingsNonce","undefined","showUpdateMessage","typingTimer","$inputSearch","doneTyping","term","parseJSON","performanceTestNonce","uptime","$dataRangeSelector","chartData","wphbUptimeStrings","$disableUptime","disableUptimeURL","drawChart","google","visualization","DataTable","addColumn","chart_array","JSON","parse","Date","addRows","chartArea","left","top","height","colors","curveType","legend","position","vAxis","format","viewWindow","min","tooltip","isHtml","series","0","axis","axes","y","Resp","label","chart","LineChart","getElementById","draw","resize"],"mappings":"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","file":"admin.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\njQuery(document).ready( function() {\n    WPHB_Admin.init();\n\n    /* Mobile navigation on Minification and Performance pages */\n    jQuery('.mobile-nav').on('click', function(e) {\n       jQuery(this).toggleClass('active');\n    });\n\n});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n( function( $ ) {\n    WPHB_Admin.caching = {\n\n        module: 'caching',\n        selectedServer: '',\n        $serverSelector: null,\n        $serverInstructions: [],\n        $expirySelectors: [],\n        $snippets: [],\n\n        init: function () {\n            var self                    = this,\n                cachingMetabox          = $('#wphb-box-caching-enable'),\n                cachingContent          = cachingMetabox.find('.box-content'),\n                cachingContentSpinner   = cachingContent.find('.spinner'),\n                cachingFooter           = cachingMetabox.find('.box-footer');\n\n            if ( wphbCachingStrings )\n                self.strings = wphbCachingStrings;\n\n            this.$serverSelector = $( '#wphb-server-type' );\n            this.selectedServer = this.$serverSelector.val();\n            //this.$spinner = $('#wphb-box-caching-enable .spinner');\n\n            self.$snippets.apache = $('#wphb-code-snippet-apache pre').first();\n            self.$snippets.nginx = $('#wphb-code-snippet-nginx pre').first();\n\n            var instructionsList = $( '.wphb-server-instructions' );\n            instructionsList.each( function( i, element ) {\n                self.$serverInstructions[ $(this).data('server') ] = $(this);\n            });\n\n            var expirySelectors = $( '.wphb-expiry-select' );\n\n            expirySelectors.each( function( i, element ) {\n                var type = $(this).data('type');\n                if ( type ) {\n                    $(this).change( function() {\n                        //self.$spinner.css( 'visibility', 'visible' );\n                        cachingContent.find('.wphb-content').hide();\n                        cachingFooter.hide();\n                        cachingContentSpinner.fadeIn();\n                        $('.wphb-notice').hide();\n\n                        // Expiration selector has changed\n                        ( function( element ) {\n                            var value = $( element ).val();\n                            // Change the plugin settings\n                            $.ajax({\n                                url: ajaxurl,\n                                method: 'POST',\n                                data: {\n                                    action: 'wphb_ajax',\n                                    wphb_nonce: self.strings.setExpirationNonce,\n                                    nonce_name: 'wphb-set-expiration',\n                                    module: self.module,\n                                    module_action: 'set_expiration',\n                                    data: {\n                                        type: type,\n                                        value: value\n                                    }\n                                }\n                            }).done( function(response) {\n                                // And reload the code snippet\n                                self.reloadSnippets();\n                            });\n                        })( this );\n                    });\n                }\n\n            });\n\n            this.showServerInstructions( this.selectedServer );\n\n            this.$serverSelector.change( function() {\n                var value = $(this).val();\n                self.hideCurrentInstructions();\n                self.showServerInstructions( value );\n                self.setServer(value);\n                self.selectedServer = value;\n            });\n\n            $( '#toggle-apache-instructions').click( function( e ) {\n                e.preventDefault();\n                $('.apache-instructions').slideToggle();\n            });\n\n            $( '#toggle-litespeed-instructions').click( function( e ) {\n                e.preventDefault();\n                $('.litespeed-instructions').slideToggle();\n            });\n\n\n            return this;\n        },\n\n        setServer: function( value ) {\n            var self = this;\n            $.ajax({\n                url: ajaxurl,\n                method: 'POST',\n                data: {\n                    action: 'wphb_ajax',\n                    wphb_nonce: self.strings.setServerNonce,\n                    nonce_name: 'wphb-set-server',\n                    module: self.module,\n                    module_action: 'set_server_type',\n                    data: {\n                        type: value\n                    }\n                }\n            });\n        },\n\n        hideCurrentInstructions: function() {\n            var selected = this.selectedServer;\n            if ( this.$serverInstructions[ selected ] ) {\n                this.$serverInstructions[ selected ].hide();\n            }\n\n        },\n\n        showServerInstructions: function( server ) {\n            if ( typeof this.$serverInstructions[ server ] != 'undefined' ) {\n                this.$serverInstructions[ server ].show();\n            }\n\n            if ( 'apache' == server || 'LiteSpeed' == server ) {\n                $( '#enable-cache-wrap').show();\n            }\n            else {\n                $( '#enable-cache-wrap').hide();\n            }\n        },\n\n        reloadSnippets: function() {\n            var self = this;\n            var stop = false;\n            for ( var i in self.$snippets ) {\n                if ( self.$snippets.hasOwnProperty( i ) ) {\n                    $.ajax({\n                        url: ajaxurl,\n                        method: 'POST',\n                        data: {\n                            action: 'wphb_ajax',\n                            wphb_nonce: self.strings.setExpirationNonce,\n                            nonce_name: 'wphb-set-expiration',\n                            module: self.module,\n                            module_action: 'reload_snippet',\n                            data: {\n                                type: i\n                            }\n                        }\n                    }).success( function( result ) {\n                        if ( result.success && ! stop ) {\n                            self.$snippets[result.data.type].text( result.data.code );\n\n                            // Make sure that we only do things when server displayed is the processed one\n                            if ( result.data.type != self.selectedServer ) {\n                                return;\n                            }\n\n                            if ( result.data.type == 'apache' && result.data.updatedFile ) {\n                                $('#wphb-notice-code-snippet-htaccess-updated').show();\n                                location.href = self.strings.recheckURL + '&caching-updated=true';\n                            }\n                            else if ( result.data.type == 'apache' && self.strings.cacheEnabled && ! result.data.updatedFile ) {\n                                $('#wphb-notice-code-snippet-htaccess-error').show();\n                                location.href = self.strings.htaccessErrorURL;\n                            }\n                            else {\n                                $('#wphb-notice-code-snippet-updated').show();\n                                location.href = self.strings.recheckURL + '&caching-updated=true';\n                            }\n\n                            //self.$spinner.css( 'visibility', 'hidden' );\n                        }\n                        else {\n                        }\n                    });\n\n                }\n            }\n        }\n    };\n}( jQuery ));\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n( function( $ ) {\n    WPHB_Admin.cloudflare = {\n        module: 'cloudflare',\n        $cfSelector: false,\n        $spinner: false,\n\n        init: function () {\n            this.$spinner = $('.wphb-spinner');\n            this.$cfSelector = $('#wphb-caching-cloudflare-summary-set-expiry');\n            var self = this;\n            if ( wphb.cloudflare.is.connected ) {\n                this.$cfSelector.change( function() {\n                    self.setExpiry.call( self, [this] );\n                } );\n            }\n\n            return this;\n        },\n\n        setExpiry: function( selector ) {\n            this.displaySpinner();\n            var request = {\n                action: 'cloudflare_set_expiry',\n                security: wphb.cloudflare.nonces.expiry,\n                value: $(selector).val()\n            };\n            $.post( ajaxurl, request, function( response ) {\n                window.location.reload();\n            });\n        },\n\n        displaySpinner: function() {\n            this.$spinner.css( 'visibility', 'visible' );\n        }\n    };\n}( jQuery ) );\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n( function( $ ) {\n    WPHB_Admin.DashboardCloudFlare = {\n        init: function( settings ) {\n            this.currentStep = settings.currentStep;\n            this.data = settings;\n            this.email = settings.email;\n            this.apiKey = settings.apiKey;\n            this.$stepsContainer = $('#cloudflare-steps');\n            this.$infoBox = $('#cloudflare-info');\n            this.$spinner = $( '.cloudflare-spinner' );\n            this.$deactivateButton = $('#wphb-box-dashboard-cloudflare .box-title .buttons');\n\n            this.renderStep( this.currentStep );\n\n            $('body').on( 'click', '.cloudflare-clear-cache .button', function(e ) {\n                e.preventDefault();\n                this.purgeCache.apply( $(e.target), [this] );\n            }.bind(this));\n\n        },\n\n        purgeCache: function( self ) {\n            var data = {\n                action: 'cloudflare_purge_cache'\n            };\n\n            var $button = this;\n            $button.attr( 'disabled', true );\n            self.showSpinner();\n            $.post( ajaxurl, data )\n                .success( function() {\n                    var $notice = $('#wphb-notice-cloudflare-purge-cache');\n                    window.scrollTo(0, 0);\n                    $notice.slideDown();\n                    setTimeout(function() {\n                        $notice.slideUp();\n                    }, 5e3);\n                })\n                .always( function() {\n                    $button.removeAttr( 'disabled' );\n                    self.hideSpinner();\n                });\n        },\n\n        renderStep: function( step ) {\n            var template = WPHB_Admin.DashboardCloudFlare.template( '#cloudflare-step-' + step );\n            var content = template( this.data );\n            var self = this;\n\n            if ( content ) {\n                this.currentStep = step;\n                this.$stepsContainer\n                    .hide()\n                    .html( template( this.data ) )\n                    .fadeIn()\n                    .find( 'form' )\n                    .on( 'submit', function( e ) {\n                        e.preventDefault();\n                        self.submitStep.call( self, $(this) );\n                    });\n\n                this.$spinner = this.$stepsContainer.find( '.cloudflare-spinner' );\n            }\n\n            this.bindEvents();\n        },\n\n        bindEvents: function() {\n            var $howToInstructions = $('#cloudflare-how-to');\n\n            $howToInstructions.hide();\n\n            $('#cloudflare-how-to-title > a').click( function( e ) {\n                e.preventDefault();\n                $howToInstructions.toggle();\n            });\n\n            this.$stepsContainer.find( 'select' ).each( function() {\n                WDP.wpmuSelect( this );\n            });\n\n            if ( 'final' === this.currentStep ) {\n                this.$deactivateButton.removeClass( 'hidden' );\n            }\n            else {\n                this.$deactivateButton.addClass( 'hidden' );\n            }\n\n\n\n        },\n\n        emptyInfoBox: function() {\n            this.$infoBox.html('');\n            this.$infoBox.removeClass();\n        },\n\n        showInfoBox: function( message ) {\n            this.$infoBox.addClass( 'wphb-notice' );\n            this.$infoBox.addClass( 'wphb-notice-error' );\n            this.$infoBox.html( message );\n        },\n\n        showSpinner: function() {\n            this.$spinner.css( 'visibility', 'visible' );\n        },\n\n        hideSpinner: function() {\n            this.$spinner.css( 'visibility', 'hidden' );\n        },\n\n        submitStep: function( $form ) {\n            var data = {\n                action: 'cloudflare_connect',\n                step: this.currentStep,\n                formData: $form.serialize(),\n                cfData: this.data\n            };\n\n            $form.find( 'input[type=submit]' ).attr( 'disabled', 'true' );\n\n\n            this.emptyInfoBox();\n            this.showSpinner();\n\n            var self = this;\n\n            $.post( ajaxurl, data, function(response) {\n                if ( response.success ) {\n                    self.data = response.data.newData;\n                    self.renderStep( response.data.nextStep );\n                }\n                else {\n                    self.showInfoBox( response.data.error );\n                }\n                if ( response.data.nextStep === 'final' ) {\n                    window.location.href = response.data.redirect;\n                    return;\n                }\n            })\n                .error( function( jqXHR, textStatus, errorThrown ) {\n                    self.showInfoBox( textStatus + ':' + errorThrown );\n                })\n                .always( function() {\n                    $form.find( 'input[type=submit]' ).removeAttr( 'disabled' );\n                    self.hideSpinner();\n                });\n        }\n    };\n\n    WPHB_Admin.DashboardCloudFlare.template = _.memoize(function ( id ) {\n        var compiled,\n            options = {\n                evaluate:    /<#([\\s\\S]+?)#>/g,\n                interpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n                escape:      /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\n                variable:    'data'\n            };\n\n        return function ( data ) {\n            _.templateSettings = options;\n            compiled = compiled || _.template( $( id ).html() );\n            return compiled( data );\n        };\n    });\n}(jQuery));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n( function( $ ) {\n    WPHB_Admin.dashboard = {\n        module: 'dashboard',\n\n        init: function() {\n            var self = this;\n\n            if ( wphbDashboardStrings ) {\n                self.strings = wphbDashboardStrings;\n            }\n\n            $( '.box-dashboard-welcome .close').click( function() {\n                $.ajax({\n                    url: ajaxurl,\n                    method: 'POST',\n                    data: {\n                        action: 'wphb_ajax',\n                        wphb_nonce: self.strings.removeWelcomeBoxNonce,\n                        nonce_name: 'wphb-remove-welcome-box',\n                        module: self.module,\n                        module_action: 'remove_welcome_box'\n                    }\n                });\n            });\n\n            $('#wphb-activate-minification').change( function() {\n                var value = $(this).val();\n                $.ajax({\n                        url: ajaxurl,\n                        method: 'POST',\n                        data: {\n                            action: 'wphb_ajax',\n                            wphb_nonce: self.strings.activateMinificationNonce,\n                            nonce_name: 'wphb-activate-minification',\n                            module: self.module,\n                            module_action: 'activate_network_minification',\n                            data: {\n                                value: value\n                            }\n                        }\n                    })\n                    .done( function() {\n                        var notice = $('#wphb-notice-minification-settings-updated');\n                        notice.slideDown();\n                        setTimeout( function() {\n                            notice.slideUp();\n                        }, 5000 );\n                    });\n            });\n\n            $('#use_cdn').change( function() {\n                var data = {\n                    wphb_nonce: self.strings.advancedSettingsNonce,\n                    nonce_name: 'wphb-minification-advanced',\n                    module_action: 'toggle_use_cdn',\n                    data: {\n                        value: $(this).is(':checked')\n                    }\n                };\n                WPHB_Admin.utils.post( data, self.module )\n                    .always( function() {\n                        var notice = $('#wphb-notice-minification-settings-updated');\n                        notice.slideDown();\n                        setTimeout( function() {\n                            notice.slideUp();\n                        }, 5000 );\n                    }); \n            });\n\n            $('.wphb-performance-report-item').click( function( e ) {\n                var url = $(this).data( 'performance-url' );\n                if ( url ) {\n                    location.href = url;\n                }\n            });\n            return this;\n        },\n\n        startQuickSetup: function () {\n            // Show quick setup modal\n            var args = {};\n            args.class = \"wphb-modal small wphb-quick-setup-modal no-close\";\n            // Show quick setup modal\n            WDP.showOverlay(\"#wphb-quick-setup-modal\", args);\n        }\n    };\n}( jQuery ));\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n(function($) {\n    WPHB_Admin.gzip = {\n        module: \"gzip\",\n        selectedServer: \"\",\n        $serverSelector: null,\n        $serverInstructions: [],\n        init: function() {\n            var self = this;\n            if (wphbGZipStrings) self.strings = wphbGZipStrings;\n            this.$serverSelector = $(\"#wphb-server-type\");\n            this.selectedServer = this.$serverSelector.val();\n            var instructionsList = $(\".wphb-server-instructions\");\n            instructionsList.each(function(i, element) {\n                self.$serverInstructions[$(this).data(\"server\")] = $(this);\n            });\n            this.showServerInstructions(this.selectedServer);\n            this.$serverSelector.change(function() {\n                var value = $(this).val();\n                self.hideCurrentInstructions();\n                self.showServerInstructions(value);\n                self.setServer(value);\n                self.selectedServer = value;\n            });\n            $(\"#toggle-apache-instructions\").click(function(e) {\n                e.preventDefault();\n                $(\".apache-instructions\").toggle();\n            });\n            $(\"#toggle-litespeed-instructions\").click(function(e) {\n                e.preventDefault();\n                $(\".litespeed-instructions\").toggle();\n            });\n            return this;\n        },\n        hideCurrentInstructions: function() {\n            var selected = this.selectedServer;\n            if (this.$serverInstructions[selected]) {\n                this.$serverInstructions[selected].hide();\n            }\n        },\n        showServerInstructions: function(server) {\n            if (typeof this.$serverInstructions[server] != \"undefined\") {\n                this.$serverInstructions[server].show();\n            }\n            if (\"apache\" == server || 'LiteSpeed' == server) {\n                $(\"#enable-cache-wrap\").show();\n            } else {\n                $(\"#enable-cache-wrap\").hide();\n            }\n        },\n        setServer: function(value) {\n            var self = this;\n            $.ajax({\n                url: ajaxurl,\n                method: \"POST\",\n                data: {\n                    action: \"wphb_ajax\",\n                    wphb_nonce: self.strings.setServerNonce,\n                    nonce_name: \"wphb-set-server\",\n                    module: self.module,\n                    module_action: \"set_server_type\",\n                    data: {\n                        type: value\n                    }\n                }\n            });\n        },\n    };\n})(jQuery);\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n( function( $ ) {\n    'use strict';\n\n    var WPHB_Admin = {\n        modules: [],\n        // Common functionality to all screens\n        init: function() {\n\n            function updatePerformanceGraph($wrap){\n                var $item = $wrap.find('.wphb-score-result-label'),\n                    val = parseInt($item.text(), 10) || 100,\n                    $circle = $wrap.find(\".wphb-score-graph-result\"),\n                    r, c, pct\n                    ;\n                r = $circle.attr('r');\n                c = Math.PI*(r*2);\n\n                if (val < 0) { val = 0;}\n                if (val > 100) { val = 100;}\n\n                pct = ((100-val)/100)*c;\n\n                $circle.css({ strokeDashoffset: pct});\n            }\n\n            function updatePerformanceResultsGraphs(){\n\n                // Update Overall Score\n                $(\".wphb-performance-report-overall-score\").each(function(){\n                    updatePerformanceGraph($(this));\n                });\n\n                // Update Current Score\n                $(\".wphb-performance-report-current-score\").each(function(){\n                    updatePerformanceGraph($(this));\n                });\n\n                // Update All Scores\n                $(\".wphb-performance-report-item-score\").each(function(){\n                    updatePerformanceGraph($(this));\n                });\n\n            }\n            window.register_events_performance = function(){\n                setTimeout(updatePerformanceResultsGraphs, 500);\n            };\n            $(function(){ setTimeout(updatePerformanceResultsGraphs, 500); });\n\n        },\n        initModule: function( module ) {\n            if ( this.hasOwnProperty( module ) ) {\n                this.modules[ module ] = this[ module ].init();\n                return this.modules[ module ];\n            }\n\n            return {};\n        },\n        getModule: function( module ) {\n            if ( typeof this.modules[ module ] != 'undefined' )\n                return this.modules[ module ];\n            else\n                return this.initModule( module );\n        }\n    };\n    \n\n    WPHB_Admin.utils = {\n\n        membershipModal: {\n            open: function() {\n                $( '#wphb-upgrade-membership-modal-link').trigger( 'click' );\n            }\n        },\n\n        post: function( data, module ) {\n            data.action = 'wphb_ajax';\n            data.module = module;\n            return $.ajax({\n                url: ajaxurl,\n                method: 'POST',\n                data: data\n            });\n        }\n    };\n\n    WPHB_Admin.notices = {\n\n        init: function() {\n            $( 'a.wphb-dismiss').click( function( e ) {\n                e.preventDefault();\n                var id = $(this).data( 'id' );\n                var nonce = $(this).data( 'nonce' );\n\n                $(this).parent( '.error' ).hide();\n            });\n        }\n    };\n\n    window.WPHB_Admin = WPHB_Admin;\n\n}( jQuery ) );\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n( function( $ ) {\n    'use strict';\n\n    WPHB_Admin.minification = {\n\n        strings: null,\n        $checkFilesButton: null,\n        $checkFilesResultsContainer : null,\n        module: 'minification',\n        checkURLSList: null,\n        checkedURLS: 0,\n        $spinner: null,\n\n        init: function() {\n            var self = this;\n\n            if ( wphbMinificationStrings )\n                self.strings = wphbMinificationStrings;\n\n            // Filter action button on Minification page\n            $('#wphb-minification-filter-button').on('click', function(e) {\n                e.preventDefault();\n                $('#wphb-minification-filter').toggle('slow');\n            });\n\n            // Check files button\n            this.$checkFilesButton = $( '#check-files' );\n            this.$disableMinification = $('#wphb-disable-minification');\n            this.$spinner = $('.spinner');\n\n            if ( this.$checkFilesButton.length ) {\n                this.$checkFilesButton.click( function( e ) {\n                    e.preventDefault();\n                    $(this).attr('disabled', true);\n                    self.checkFiles( self.strings.finishedCheckURLsLink );\n                });\n            }\n\n            $('.wphb-discard').click( function(e) {\n                e.preventDefault();\n\n                if ( confirm( self.strings.discardAlert ) ) {\n                    location.reload();\n                }\n                return false;\n\n            });\n\n            $( '.wphb-enqueued-files input' ).on( 'change', function() {\n                $('.wphb-discard').attr( 'disabled', false );\n            });\n\n            $('#use_cdn').change( function() {\n                var data = {\n                    wphb_nonce: self.strings.advancedSettingsNonce,\n                    nonce_name: 'wphb-minification-advanced',\n                    module_action: 'toggle_use_cdn',\n                    data: {\n                        value: $(this).is(':checked')\n                    }\n                };\n                WPHB_Admin.utils.post( data, self.module )\n                    .always( function() {\n                        var notice = $('#wphb-notice-minification-advanced-settings-updated');\n                        notice.slideDown();\n                        setTimeout( function() {\n                            notice.slideUp();\n                        }, 5000 );\n                    });\n            });\n\n            this.$disableMinification.change( function() {\n                var value = $(this).is(':checked');\n\n                self.$spinner.css( 'visibility', 'visible' );\n\n                if ( self.timer && value ) {\n                    clearTimeout( self.timer );\n                    self.$spinner.css( 'visibility', 'hidden' );\n                }\n\n                self.timer = setTimeout(\n                    function() {\n                        $.ajax({\n                            url: ajaxurl,\n                            method: 'POST',\n                            data: {\n                                action: 'wphb_ajax',\n                                wphb_nonce: self.strings.toggleMinificationNonce,\n                                nonce_name: 'wphb-toggle-minification',\n                                module: self.module,\n                                module_action: 'toggle_minification',\n                                data: {\n                                    value: value\n                                }\n                            }\n                        }).always( function() {\n                            location.reload();\n                        });\n\n                    }, 3000\n                );\n\n\n            });\n\n            this.rowsCollection = new WPHB_Admin.minification.RowsCollection();\n\n            var rows = $('.wphb-border-row');\n\n            rows.each( function( index, row ) {\n                var _row;\n                if ( $(row).data('filter-secondary') ) {\n                    _row = new WPHB_Admin.minification.Row( $(row), $(row).data('filter'), $(row).data('filter-secondary') );\n                }\n                else {\n                    _row = new WPHB_Admin.minification.Row( $(row), $(row).data('filter') );\n                }\n                self.rowsCollection.push( _row );\n            });\n\n            $('#wphb-s').keyup( function() {\n                self.rowsCollection.addFilter( $(this).val(), 'primary' );\n                self.rowsCollection.applyFilters();\n            });\n\n            $('#wphb-secondary-filter').change( function() {\n                self.rowsCollection.addFilter( $(this).val(), 'secondary' );\n                self.rowsCollection.applyFilters();\n            });\n\n            $('.filter-toggles').change( function() {\n                var element = $(this);\n                var what = element.data('toggles');\n                var value = element.prop( 'checked' );\n                var visibleItems = self.rowsCollection.getVisibleItems();\n\n                for ( var i in visibleItems ) {\n                    visibleItems[i].change( what, value );\n                }\n            });\n\n            // Files selectors\n            var filesList = $('input.wphb-minification-file-selector');\n\n            filesList.click( function() {\n                var $this = $( this );\n                var element = self.rowsCollection.getItemById( $this.data( 'type' ), $this.data( 'handle' ) );\n                if ( ! element ) {\n                    return;\n                }\n\n                if ( $this.is( ':checked' ) ) {\n                    element.select();\n                }\n                else {\n                    element.unSelect();\n                }\n            });\n\n            // Include/exclude file checkbox\n            $('.toggle-cross').on('click', function(e) {\n                var $this = $(this);\n                var checkbox = $this.find( 'input.toggle-include' );\n                var row = self.rowsCollection.getItemById( $this.data( 'type' ), $this.data( 'handle' ) );\n                // Mark the item as include or not in the rows list\n                if ( row ) {\n                    row.change( 'include', ! checkbox.prop( 'checked' ) );\n                    row.getElement().find( 'input:not(.toggle-include)' ).prop('disabled', ! checkbox.prop( 'checked' ) );\n                }\n            });\n\n            // Handle two CDN checkboxes on Minification page\n            var checkboxes = $(\"input[type=checkbox][name=use_cdn]\");\n            checkboxes.change( function() {\n                var checkedState = $(this).prop('checked');\n\n                checkboxes.each( function() {\n                    this.checked = checkedState;\n                });\n            });\n\n            /* Show details of minification row on mobile devices */\n            $('body').on('click', '.wphb-minification-file-details', function(e) {\n                if ( window.innerWidth < 783 ) {\n                    $(this).parent().find('.wphb-minification-row-details').toggle('slow');\n                }\n            });\n\n            /*\n             Catch window resize and revert styles for responsive divs\n             1/4 of a second should be enough to trigger during device rotations (from portrait to landscape mode)\n             */\n            var minification_resize_rows = _.debounce(function() {\n\n                if ( window.innerWidth >= 783 ) {\n                    $('.wphb-minification-row-details').css('display', 'flex');\n                } else {\n                    $('.wphb-minification-row-details').css('display', 'none');\n                }\n\n            }, 250);\n\n            window.addEventListener('resize', minification_resize_rows);\n\n            return this;\n        },\n\n        checkFiles: function( redirect ) {\n            var self = this;\n\n            if ( typeof redirect === 'undefined' )\n                redirect = false;\n\n            if ( ! self.minificationStarted ) {\n                // Store the progress in session storage to persist during page reloads\n                // If there is no previous value, we init one with 10%\n                if ( sessionStorage.getItem('progress') === null ) {\n                    sessionStorage.setItem('progress', 10);\n                }\n                // Update progress bar\n                $('.wphb-scan-progress .wphb-scan-progress-text span').text( sessionStorage.getItem('progress') + '%' );\n                $('.wphb-scan-progress .wphb-scan-progress-bar span').width( sessionStorage.getItem('progress') + '%' );\n\n                // Send an AJAX request that will flag the check files as started\n                $.ajax({\n                    url: ajaxurl,\n                    data: {\n                        action: 'wphb_ajax',\n                        method: 'POST',\n                        wphb_nonce: self.strings.checkFilesNonce,\n                        nonce_name: 'wphb-minification-check-files',\n                        module: self.module,\n                        module_action: 'start_check',\n                        progress: sessionStorage.getItem('progress')\n                    }\n                }).success(function(results) {\n                    // Set the number of steps to be used in percentage count. Only if not set already.\n                    if ( ( typeof results.data.steps !== 'undefined' ) && ( sessionStorage.getItem('steps') === null ) ) {\n                        sessionStorage.setItem('steps', results.data.steps);\n                    }\n\n                    self.minificationStarted = true;\n                    self.checkFiles( redirect );\n                });\n            }\n            else {\n                $.ajax({\n                    url: ajaxurl,\n                    data: {\n                        action: 'wphb_ajax',\n                        method: 'POST',\n                        wphb_nonce: self.strings.checkFilesNonce,\n                        nonce_name: 'wphb-minification-check-files',\n                        module: self.module,\n                        module_action: 'check_step',\n                        progress: sessionStorage.getItem('progress'),\n                        step: Math.round( 80 / sessionStorage.getItem('steps') )\n                    }\n                }).always( function(results) {\n                    if ( typeof results.data.finished !== 'undefined' ) {\n                        // Finished\n                        if ( results.data.finished && redirect ) {\n                            // Clear session storage\n                            sessionStorage.clear();\n\n                            // Update progress bar\n                            $('.wphb-scan-progress .wphb-scan-progress-text span').text('100%');\n                            $('.wphb-scan-progress .wphb-scan-progress-bar span').width('100%');\n\n                            // Show enable cdn modal only for members\n                            if ( true === results.data.show_cnd ) {\n                                var args = {};\n                                args.class = \"wphb-modal small wphb-progress-modal no-close\";\n                                WDP.showOverlay(\"#enable-cdn-modal\", args);\n                            } else {\n                                window.location.href = redirect;\n                            }\n\n                            return;\n                        }\n                        // Next step\n                        else if ( ! results.data.finished ) {\n                            // Store the progress in session storage to persist during page reloads\n                            var progress = parseInt( sessionStorage.getItem('progress') ) + Math.round( 80 / sessionStorage.getItem('steps') );\n                            sessionStorage.setItem('progress', progress)\n\n                            if ( progress >= 90 ) {\n                                $('.wphb-progress-state .wphb-progress-state-text').text('Finalizing...');\n                            }\n                            if ( progress > 100 ) {\n                                progress = 100;\n                            }\n                            // Update progress bar\n                            $('.wphb-scan-progress .wphb-scan-progress-text span').text( progress + '%' );\n                            $('.wphb-scan-progress .wphb-scan-progress-bar span').width( progress + '%' );\n\n                            // Wait 3 seconds before calling again\n                            window.setTimeout( function() {\n                                self.checkFiles( redirect );\n                            }, 3000);\n                        }\n                    }\n                    else {\n                        // Error\n                        window.location.href = redirect;\n                        return;\n                    }\n                });\n            }\n\n\n        }\n\n    };\n\n    WPHB_Admin.minification.Row = function( _element, _filter, _filter_sec ) {\n        var $el = _element,\n            filter = _filter.toLowerCase(),\n            filterSecondary = false,\n            selected = false,\n            visible = true;\n\n        var $include = $el.find( '.toggle-include' ),\n            $combine = $el.find( '.toggle-combine' ),\n            $minify = $el.find( '.toggle-minify' );\n\n        var $posFooter = $el.find('.toggle-position-footer');\n\n        var $disableIcon = $el.find( '.toggle-cross > i' );\n\n        if ( _filter_sec ) {\n            filterSecondary = _filter_sec.toLowerCase();\n        }\n\n        return {\n            hide: function() {\n                $el.addClass( 'out-of-filter' );\n                visible = false;\n            },\n\n            show: function() {\n                $el.removeClass( 'out-of-filter' );\n                visible = true;\n            },\n\n            getElement: function() {\n                return $el;\n            },\n\n            getId: function() {\n                return $el.attr('id');\n            },\n\n            getFilter: function() {\n                return filter;\n            },\n\n            matchFilter: function( text ) {\n                if ( text === '' ) {\n                    return true;\n                }\n\n                text = text.toLowerCase();\n                return filter.search( text ) > -1;\n            },\n\n            matchSecondaryFilter: function( text ) {\n                if ( text === '' ) {\n                    return true;\n                }\n\n                if ( ! filterSecondary ) {\n                    return false;\n                }\n\n                text = text.toLowerCase();\n                return filterSecondary === text;\n            },\n\n            isVisible: function() {\n                return visible;\n            },\n\n            isSelected: function() {\n                return selected;\n            },\n\n            select: function() {\n                selected = true;\n            },\n\n            unSelect: function() {\n                selected = false;\n            },\n\n            change: function( what, value ) {\n                switch ( what ) {\n                    case 'minify': {\n                        $minify.prop( 'checked', value );\n                        break;\n                    }\n                    case 'combine': {\n                        $combine.prop( 'checked', value );\n                        break;\n                    }\n                    case 'include': {\n                        $disableIcon.removeClass();\n                        $include.prop( 'checked', value );\n                        if ( value ) {\n                            $el.removeClass('disabled');\n                            $disableIcon.addClass('dev-icon dev-icon-cross');\n                            $include.attr( 'checked', true );\n                        } else {\n                            $el.addClass('disabled');\n                            $disableIcon.addClass('wdv-icon wdv-icon-refresh');\n                            $include.removeAttr( 'checked' );\n                        }\n                        break;\n                    }\n                    case 'footer': {\n                        $posFooter.prop( 'checked', value );\n                        break;\n                    }\n                }\n            }\n\n        };\n    };\n\n    WPHB_Admin.minification.RowsCollection = function() {\n        var items = [];\n        var currentFilter = '';\n        var currentSecondaryFilter = '';\n\n        return {\n            push: function( row ) {\n                if ( typeof row === 'object' ) {\n                    items.push( row );\n                }\n            },\n\n            getItems: function() {\n                return items;\n            },\n\n            getItem: function( i ) {\n                if ( items[i] ) {\n                    return items[i];\n                }\n                return false;\n            },\n\n            /**\n             * Get a collection item by type and ID\n             * @param type\n             * @param id\n             */\n            getItemById: function( type, id ) {\n                var value = false;\n                for ( var i in items ) {\n                    if ( 'wphb-file-' + type + '-' + id === items[i].getId() ) {\n                        value = items[i];\n                        break;\n                    }\n                }\n                return value;\n            },\n\n            getVisibleItems: function() {\n                var visible = [];\n                for ( var i in items ) {\n                    if ( items[i].isVisible() ) {\n                        visible.push( items[i] );\n                    }\n                }\n                return visible;\n            },\n\n            getSelectedItems: function() {\n                var selected = [];\n\n                for ( var i in items ) {\n                    if ( items[i].isVisible() && items[i].isSelected() ) {\n                        selected.push( items[i] );\n                    }\n                }\n\n                return selected;\n            },\n\n            addFilter: function( filter, type ) {\n                if ( type === 'secondary' ) {\n                    currentSecondaryFilter = filter;\n                }\n                else {\n                    currentFilter = filter;\n                }\n            },\n\n            applyFilters: function() {\n                for ( var i in items ) {\n                    if ( items[i] ) {\n                        if ( items[i].matchFilter( currentFilter ) && items[i].matchSecondaryFilter( currentSecondaryFilter ) ) {\n                            items[i].show();\n                        }\n                        else {\n                            items[i].hide();\n                        }\n                    }\n\n                }\n            }\n        };\n    };\n\n}( jQuery ));\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n( function( $ ) {\n    'use strict';\n    WPHB_Admin.performance = {\n\n        module: 'performance',\n        iteration: 0,\n        progress: 0,\n\n        init: function () {\n\n            var self = this;\n\n            if (wphbPerformanceStrings)\n                this.strings = wphbPerformanceStrings;\n\n            this.$runTestButton = $('#run-performance-test');\n\n            $(\".performance-report-table\").off('click', 'button');\n            $('.performance-report-table').on('click', '.wphb-performance-report-item-cta .additional-content-opener' && 'tr.wphb-performance-report-item', function (e) {\n                e.preventDefault();\n\n                var getParentPerformanceItem = $(this).closest(\".wphb-performance-report-item\"),\n                    getNextAdditionalContentRow = getParentPerformanceItem.nextUntil(\".wphb-performance-report-item\");\n\n                getNextAdditionalContentRow.toggleClass(\"wphb-performance-report-item-additional-content-opened\");\n\n                if (getNextAdditionalContentRow.hasClass(\"wphb-performance-report-item-additional-content-opened\")) {\n                    getParentPerformanceItem.addClass(\"wphb-performance-report-item-opened\");\n                } else {\n                    getParentPerformanceItem.removeClass(\"wphb-performance-report-item-opened\");\n                }\n\n            });\n\n            if (this.$runTestButton.length) {\n                this.$runTestButton.click(function (e) {\n                    e.preventDefault();\n                    $(this).attr('disabled', true);\n                    self.performanceTest(self.strings.finishedTestURLsLink);\n                });\n            }\n\n            // If a hash is present in URL, let's open the rule extra content\n            var hash = window.location.hash;\n            if (hash) {\n                var row = $(hash);\n                if (row.length) {\n                    row.find('.trigger-additional-content').trigger('click');\n                }\n\n            }\n\n            // Schedule show/hide day of week\n            $('select[name=\"email-frequency\"]').change(function () {\n                if ( '1' === $(this).val() ) {\n                    $(this).closest('.schedule-box').find('div.days-container').hide();\n                } else {\n                    $(this).closest('.schedule-box').find('div.days-container').show();\n                }\n            }).change();\n\n            // Remove recipient\n            $('body').on('click', '.wphb-remove-recipient', function (e) {\n                e.preventDefault();\n                $(this).closest('li').remove();\n                $('.scan-settings').find(\"input[id='scan_recipient'][value=\" + $(this).attr('data-id') + \"]\").remove();\n            });\n\n            // Add recipient\n            $('#add-receipt').click(function () {\n                var that = $(this);\n                $.ajax({\n                    type: 'POST',\n                    url: ajaxurl,\n                    data: {\n                        action: 'add_receipt_scan_receipts',\n                        'id': 'scan_receipts',\n                        user: $(\"#wphb-username-search\").val()\n                    },\n                    beforeSend: function () {\n                        that.attr('disabled', 'disabled');\n                    },\n                    success: function (data) {\n                        var user_row = $('<li/>');\n                        user_row.append($('<img/>').attr({\n                            src: data.avatar,\n                            width: '30'\n                        }));\n                        user_row.append($('<span class=\"name\"/>').html(data.name));\n                        if (data.is_current) {\n                            user_row.append($('<span/>').addClass('def-tag tag-generic').html(self.strings.youLabelText));\n                        }\n                        user_row.append($('<a/>').attr({\n                            'data-id': data.user_id,\n                            'class': 'remove float-r wphb-remove-recipient',\n                            'href': '#'\n                        }).html(self.strings.removeButtonText));\n\n                        $('.receipt ul').append(user_row);\n                        $(\"#wphb-username-search\").trigger('results:clear');\n                        $(\"#wphb-username-search\").val('');\n\n                        $('<input>').attr({\n                            type: 'hidden',\n                            id: 'scan_recipient',\n                            name: 'email-recipients[]',\n                            value: data.user_id\n                        }).appendTo('form.scan-settings');\n                    }\n                });\n                return false;\n            });\n\n            // Save report settings\n            $('body').on('submit', '.scan-frm', function (e) {\n                e.preventDefault();\n                var form_data = $(this).serialize();\n                var that = $(this);\n\n                $.ajax({\n                    url: ajaxurl,\n                    data: {\n                        type: 'POST',\n                        action: 'wphb_ajax',\n                        data: form_data,\n                        wphb_nonce: self.strings.performanceSaveSettingsNonce,\n                        nonce_name: 'wphb-performance-report-save-settings',\n                        module: self.module,\n                        module_action: 'save_report_settings'\n                    },\n                    beforeSend: function () {\n                        that.find('.button').attr('disabled', 'disabled');\n                    },\n                    success: function (response) {\n                        if (response.data !== undefined && response.data.url !== undefined) {\n                            location.href = response.data.url;\n                        } else {\n                            that.find('.button').removeAttr('disabled');\n                            self.showUpdateMessage();\n                        }\n                    }\n                });\n                return false;\n            });\n\n            var typingTimer;                //timer identifier\n            var doneTypingInterval = 1000;  //time in ms, 5 second for example\n            var $inputSearch = $(\"#wphb-username-search\");\n\n            //on keyup, start the countdown\n            $inputSearch.on('keyup', function () {\n                clearTimeout(typingTimer);\n                typingTimer = setTimeout(self.doneTyping, doneTypingInterval);\n            });\n\n            //on keydown, clear the countdown\n            $inputSearch.on('keydown', function () {\n                clearTimeout(typingTimer);\n            });\n\n            return this;\n\n        },\n\n        //user is \"finished typing,\" do something\n        doneTyping: function () {\n            //do something\n            var that = $(\"#wphb-username-search\");\n            var value = that.val();\n            if (value.length > 2) {\n                $.ajax({\n                    type: 'POST',\n                    url: ajaxurl,\n                    data: {\n                        'action': 'username_search_scan_receipts',\n                        'id': 'scan_receipts',\n                        'term': value\n                    },\n                    beforeSend: function () {\n                        that.trigger('progress:start');\n                    },\n                    success: function (data) {\n                        data = $.parseJSON(data);\n                        that.trigger('progress:stop');\n                        that.trigger('results:show', [data]);\n                    }\n                });\n            }\n\n            $(\"#wphb-username-search\").on('item:select', function () {\n                $(this).closest('.receipt').find('button').removeAttr('disabled');\n            });\n        },\n\n        showUpdateMessage: function () {\n            var notice = $('#wphb-notice-performance-report-settings-updated');\n            window.scrollTo(0,0);\n            notice.slideDown();\n            setTimeout( function() {\n                notice.slideUp();\n            }, 5000 );\n        },\n\n        performanceTest: function (redirect) {\n            var self = this;\n\n            if (typeof redirect === 'undefined')\n                redirect = false;\n\n            // Update progress bar\n            if ( self.progress < 90 ) {\n                self.progress += 35;\n            }\n            if ( self.progress > 100 ) {\n                self.progress = 90;\n            }\n            $('.wphb-scan-progress .wphb-scan-progress-text span').text(self.progress+'%');\n            $('.wphb-scan-progress .wphb-scan-progress-bar span').attr('style', 'width:'+self.progress+'%');\n\n            $.ajax({\n                url: ajaxurl,\n                data: {\n                    action: 'wphb_ajax',\n                    method: 'POST',\n                    wphb_nonce: self.strings.performanceTestNonce,\n                    nonce_name: 'wphb-welcome-performance-test',\n                    module: self.module,\n                    module_action: 'performance_test'\n                }\n            }).success(function (response) {\n                var finished = response.success;\n                if (!finished) {\n                    // Try again 5 seconds later\n                    window.setTimeout(function () {\n                        self.performanceTest(redirect);\n                    }, 5000);\n                }\n                else {\n                    if (redirect)\n                        window.location = redirect;\n                }\n\n            });\n\n        }\n    };\n}( jQuery ));\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n( function( $ ) {\n    WPHB_Admin.uptime = {\n        module: 'uptime',\n        $dataRangeSelector: null,\n        chartData: null,\n        timer:null,\n        $spinner: null,\n        init: function() {\n            this.$spinner = $('.spinner');\n            this.strings = wphbUptimeStrings;\n            this.$dataRangeSelector = $( '#wphb-uptime-data-range' );\n            this.chartData = $('#uptime-chart-json').val();\n            this.$disableUptime = $('#wphb-disable-uptime');\n\n            this.$dataRangeSelector.change( function() {\n                window.location.href = $(this).find( ':selected' ).data( 'url' );\n            });\n\n            var self = this;\n            this.$disableUptime.change( function() {\n                self.$spinner.css( 'visibility', 'visible' );\n                var value = $(this).is(':checked');\n                if ( value && self.timer ) {\n                    clearTimeout( self.timer );\n                    self.$spinner.css( 'visibility', 'hidden' );\n                }\n                else {\n                    // you have 3 seconds to change your mind\n                    self.timer = setTimeout( function() {\n                        location.href = self.strings.disableUptimeURL;\n                    }, 3000 );\n                }\n\n                return;\n            });\n\n            this.drawChart();\n\n            /* Re-check Uptime status */\n            $('#uptime-re-check-status').on( 'click', function(e){\n                e.preventDefault();\n                location.reload();\n            });\n        },\n\n        drawChart: function() {\n            var data = new google.visualization.DataTable();\n            data.addColumn('datetime', 'Day');\n            data.addColumn('number', 'Response Time (ms)');\n\n            var chart_array = JSON.parse( this.chartData );\n            for (var i = 0; i < chart_array.length; i++) {\n                chart_array[i][0] = new Date( chart_array[i][0] );\n                chart_array[i][1] = Math.round( chart_array[i][1] );\n\n                /* brings the graph below the x axis */\n                if ( Math.round( chart_array[i][1] ) == 0 ) {\n                    chart_array[i][1] = -100;\n                }\n\n            }\n\n            data.addRows(chart_array);\n\n            var options = {\n                chartArea: {\n                    left: 80,\n                    top: 20,\n                    width: '90%',\n                    height: '90%'\n                },\n                colors: ['#24ADE5'],\n                curveType: 'function',\n                /*interpolateNulls: true,*/\n                legend: { position: 'none' },\n                vAxis: {\n                    format: '#,### ms',\n                    viewWindow: { min: 0 } /* don't display negative values */\n                },\n                tooltip: { isHtml: true },\n                series: {\n                    0: { axis: 'Resp' }\n                },\n                axes: {\n                    y: {\n                        Resp: { label: 'Response Time (ms)' }\n                    }\n                }\n            };\n\n            var chart = new google.visualization.LineChart(document.getElementById('uptime-chart'));\n            chart.draw(data, options);\n\n            $(window).resize(function(){\n                chart.draw(data, options);\n            });\n        }\n    };\n}(jQuery));\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(6);\n__webpack_require__(8);\n__webpack_require__(5);\n__webpack_require__(1);\n__webpack_require__(7);\n__webpack_require__(4);\n__webpack_require__(3);\n__webpack_require__(9);\n__webpack_require__(2);\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// admin.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f6c3fcecda4bc844642c","jQuery(document).ready( function() {\n    WPHB_Admin.init();\n\n    /* Mobile navigation on Minification and Performance pages */\n    jQuery('.mobile-nav').on('click', function(e) {\n       jQuery(this).toggleClass('active');\n    });\n\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./_src/admin/js/admin-app.js\n// module id = 0\n// module chunks = 0","( function( $ ) {\n    WPHB_Admin.caching = {\n\n        module: 'caching',\n        selectedServer: '',\n        $serverSelector: null,\n        $serverInstructions: [],\n        $expirySelectors: [],\n        $snippets: [],\n\n        init: function () {\n            var self                    = this,\n                cachingMetabox          = $('#wphb-box-caching-enable'),\n                cachingContent          = cachingMetabox.find('.box-content'),\n                cachingContentSpinner   = cachingContent.find('.spinner'),\n                cachingFooter           = cachingMetabox.find('.box-footer');\n\n            if ( wphbCachingStrings )\n                self.strings = wphbCachingStrings;\n\n            this.$serverSelector = $( '#wphb-server-type' );\n            this.selectedServer = this.$serverSelector.val();\n            //this.$spinner = $('#wphb-box-caching-enable .spinner');\n\n            self.$snippets.apache = $('#wphb-code-snippet-apache pre').first();\n            self.$snippets.nginx = $('#wphb-code-snippet-nginx pre').first();\n\n            var instructionsList = $( '.wphb-server-instructions' );\n            instructionsList.each( function( i, element ) {\n                self.$serverInstructions[ $(this).data('server') ] = $(this);\n            });\n\n            var expirySelectors = $( '.wphb-expiry-select' );\n\n            expirySelectors.each( function( i, element ) {\n                var type = $(this).data('type');\n                if ( type ) {\n                    $(this).change( function() {\n                        //self.$spinner.css( 'visibility', 'visible' );\n                        cachingContent.find('.wphb-content').hide();\n                        cachingFooter.hide();\n                        cachingContentSpinner.fadeIn();\n                        $('.wphb-notice').hide();\n\n                        // Expiration selector has changed\n                        ( function( element ) {\n                            var value = $( element ).val();\n                            // Change the plugin settings\n                            $.ajax({\n                                url: ajaxurl,\n                                method: 'POST',\n                                data: {\n                                    action: 'wphb_ajax',\n                                    wphb_nonce: self.strings.setExpirationNonce,\n                                    nonce_name: 'wphb-set-expiration',\n                                    module: self.module,\n                                    module_action: 'set_expiration',\n                                    data: {\n                                        type: type,\n                                        value: value\n                                    }\n                                }\n                            }).done( function(response) {\n                                // And reload the code snippet\n                                self.reloadSnippets();\n                            });\n                        })( this );\n                    });\n                }\n\n            });\n\n            this.showServerInstructions( this.selectedServer );\n\n            this.$serverSelector.change( function() {\n                var value = $(this).val();\n                self.hideCurrentInstructions();\n                self.showServerInstructions( value );\n                self.setServer(value);\n                self.selectedServer = value;\n            });\n\n            $( '#toggle-apache-instructions').click( function( e ) {\n                e.preventDefault();\n                $('.apache-instructions').slideToggle();\n            });\n\n            $( '#toggle-litespeed-instructions').click( function( e ) {\n                e.preventDefault();\n                $('.litespeed-instructions').slideToggle();\n            });\n\n\n            return this;\n        },\n\n        setServer: function( value ) {\n            var self = this;\n            $.ajax({\n                url: ajaxurl,\n                method: 'POST',\n                data: {\n                    action: 'wphb_ajax',\n                    wphb_nonce: self.strings.setServerNonce,\n                    nonce_name: 'wphb-set-server',\n                    module: self.module,\n                    module_action: 'set_server_type',\n                    data: {\n                        type: value\n                    }\n                }\n            });\n        },\n\n        hideCurrentInstructions: function() {\n            var selected = this.selectedServer;\n            if ( this.$serverInstructions[ selected ] ) {\n                this.$serverInstructions[ selected ].hide();\n            }\n\n        },\n\n        showServerInstructions: function( server ) {\n            if ( typeof this.$serverInstructions[ server ] != 'undefined' ) {\n                this.$serverInstructions[ server ].show();\n            }\n\n            if ( 'apache' == server || 'LiteSpeed' == server ) {\n                $( '#enable-cache-wrap').show();\n            }\n            else {\n                $( '#enable-cache-wrap').hide();\n            }\n        },\n\n        reloadSnippets: function() {\n            var self = this;\n            var stop = false;\n            for ( var i in self.$snippets ) {\n                if ( self.$snippets.hasOwnProperty( i ) ) {\n                    $.ajax({\n                        url: ajaxurl,\n                        method: 'POST',\n                        data: {\n                            action: 'wphb_ajax',\n                            wphb_nonce: self.strings.setExpirationNonce,\n                            nonce_name: 'wphb-set-expiration',\n                            module: self.module,\n                            module_action: 'reload_snippet',\n                            data: {\n                                type: i\n                            }\n                        }\n                    }).success( function( result ) {\n                        if ( result.success && ! stop ) {\n                            self.$snippets[result.data.type].text( result.data.code );\n\n                            // Make sure that we only do things when server displayed is the processed one\n                            if ( result.data.type != self.selectedServer ) {\n                                return;\n                            }\n\n                            if ( result.data.type == 'apache' && result.data.updatedFile ) {\n                                $('#wphb-notice-code-snippet-htaccess-updated').show();\n                                location.href = self.strings.recheckURL + '&caching-updated=true';\n                            }\n                            else if ( result.data.type == 'apache' && self.strings.cacheEnabled && ! result.data.updatedFile ) {\n                                $('#wphb-notice-code-snippet-htaccess-error').show();\n                                location.href = self.strings.htaccessErrorURL;\n                            }\n                            else {\n                                $('#wphb-notice-code-snippet-updated').show();\n                                location.href = self.strings.recheckURL + '&caching-updated=true';\n                            }\n\n                            //self.$spinner.css( 'visibility', 'hidden' );\n                        }\n                        else {\n                        }\n                    });\n\n                }\n            }\n        }\n    };\n}( jQuery ));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./_src/admin/js/admin-caching.js\n// module id = 1\n// module chunks = 0","( function( $ ) {\n    WPHB_Admin.cloudflare = {\n        module: 'cloudflare',\n        $cfSelector: false,\n        $spinner: false,\n\n        init: function () {\n            this.$spinner = $('.wphb-spinner');\n            this.$cfSelector = $('#wphb-caching-cloudflare-summary-set-expiry');\n            var self = this;\n            if ( wphb.cloudflare.is.connected ) {\n                this.$cfSelector.change( function() {\n                    self.setExpiry.call( self, [this] );\n                } );\n            }\n\n            return this;\n        },\n\n        setExpiry: function( selector ) {\n            this.displaySpinner();\n            var request = {\n                action: 'cloudflare_set_expiry',\n                security: wphb.cloudflare.nonces.expiry,\n                value: $(selector).val()\n            };\n            $.post( ajaxurl, request, function( response ) {\n                window.location.reload();\n            });\n        },\n\n        displaySpinner: function() {\n            this.$spinner.css( 'visibility', 'visible' );\n        }\n    };\n}( jQuery ) );\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./_src/admin/js/admin-cloudflare.js\n// module id = 2\n// module chunks = 0","( function( $ ) {\n    WPHB_Admin.DashboardCloudFlare = {\n        init: function( settings ) {\n            this.currentStep = settings.currentStep;\n            this.data = settings;\n            this.email = settings.email;\n            this.apiKey = settings.apiKey;\n            this.$stepsContainer = $('#cloudflare-steps');\n            this.$infoBox = $('#cloudflare-info');\n            this.$spinner = $( '.cloudflare-spinner' );\n            this.$deactivateButton = $('#wphb-box-dashboard-cloudflare .box-title .buttons');\n\n            this.renderStep( this.currentStep );\n\n            $('body').on( 'click', '.cloudflare-clear-cache .button', function(e ) {\n                e.preventDefault();\n                this.purgeCache.apply( $(e.target), [this] );\n            }.bind(this));\n\n        },\n\n        purgeCache: function( self ) {\n            var data = {\n                action: 'cloudflare_purge_cache'\n            };\n\n            var $button = this;\n            $button.attr( 'disabled', true );\n            self.showSpinner();\n            $.post( ajaxurl, data )\n                .success( function() {\n                    var $notice = $('#wphb-notice-cloudflare-purge-cache');\n                    window.scrollTo(0, 0);\n                    $notice.slideDown();\n                    setTimeout(function() {\n                        $notice.slideUp();\n                    }, 5e3);\n                })\n                .always( function() {\n                    $button.removeAttr( 'disabled' );\n                    self.hideSpinner();\n                });\n        },\n\n        renderStep: function( step ) {\n            var template = WPHB_Admin.DashboardCloudFlare.template( '#cloudflare-step-' + step );\n            var content = template( this.data );\n            var self = this;\n\n            if ( content ) {\n                this.currentStep = step;\n                this.$stepsContainer\n                    .hide()\n                    .html( template( this.data ) )\n                    .fadeIn()\n                    .find( 'form' )\n                    .on( 'submit', function( e ) {\n                        e.preventDefault();\n                        self.submitStep.call( self, $(this) );\n                    });\n\n                this.$spinner = this.$stepsContainer.find( '.cloudflare-spinner' );\n            }\n\n            this.bindEvents();\n        },\n\n        bindEvents: function() {\n            var $howToInstructions = $('#cloudflare-how-to');\n\n            $howToInstructions.hide();\n\n            $('#cloudflare-how-to-title > a').click( function( e ) {\n                e.preventDefault();\n                $howToInstructions.toggle();\n            });\n\n            this.$stepsContainer.find( 'select' ).each( function() {\n                WDP.wpmuSelect( this );\n            });\n\n            if ( 'final' === this.currentStep ) {\n                this.$deactivateButton.removeClass( 'hidden' );\n            }\n            else {\n                this.$deactivateButton.addClass( 'hidden' );\n            }\n\n\n\n        },\n\n        emptyInfoBox: function() {\n            this.$infoBox.html('');\n            this.$infoBox.removeClass();\n        },\n\n        showInfoBox: function( message ) {\n            this.$infoBox.addClass( 'wphb-notice' );\n            this.$infoBox.addClass( 'wphb-notice-error' );\n            this.$infoBox.html( message );\n        },\n\n        showSpinner: function() {\n            this.$spinner.css( 'visibility', 'visible' );\n        },\n\n        hideSpinner: function() {\n            this.$spinner.css( 'visibility', 'hidden' );\n        },\n\n        submitStep: function( $form ) {\n            var data = {\n                action: 'cloudflare_connect',\n                step: this.currentStep,\n                formData: $form.serialize(),\n                cfData: this.data\n            };\n\n            $form.find( 'input[type=submit]' ).attr( 'disabled', 'true' );\n\n\n            this.emptyInfoBox();\n            this.showSpinner();\n\n            var self = this;\n\n            $.post( ajaxurl, data, function(response) {\n                if ( response.success ) {\n                    self.data = response.data.newData;\n                    self.renderStep( response.data.nextStep );\n                }\n                else {\n                    self.showInfoBox( response.data.error );\n                }\n                if ( response.data.nextStep === 'final' ) {\n                    window.location.href = response.data.redirect;\n                    return;\n                }\n            })\n                .error( function( jqXHR, textStatus, errorThrown ) {\n                    self.showInfoBox( textStatus + ':' + errorThrown );\n                })\n                .always( function() {\n                    $form.find( 'input[type=submit]' ).removeAttr( 'disabled' );\n                    self.hideSpinner();\n                });\n        }\n    };\n\n    WPHB_Admin.DashboardCloudFlare.template = _.memoize(function ( id ) {\n        var compiled,\n            options = {\n                evaluate:    /<#([\\s\\S]+?)#>/g,\n                interpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n                escape:      /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\n                variable:    'data'\n            };\n\n        return function ( data ) {\n            _.templateSettings = options;\n            compiled = compiled || _.template( $( id ).html() );\n            return compiled( data );\n        };\n    });\n}(jQuery));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./_src/admin/js/admin-dashboard-cloudflare.js\n// module id = 3\n// module chunks = 0","( function( $ ) {\n    WPHB_Admin.dashboard = {\n        module: 'dashboard',\n\n        init: function() {\n            var self = this;\n\n            if ( wphbDashboardStrings ) {\n                self.strings = wphbDashboardStrings;\n            }\n\n            $( '.box-dashboard-welcome .close').click( function() {\n                $.ajax({\n                    url: ajaxurl,\n                    method: 'POST',\n                    data: {\n                        action: 'wphb_ajax',\n                        wphb_nonce: self.strings.removeWelcomeBoxNonce,\n                        nonce_name: 'wphb-remove-welcome-box',\n                        module: self.module,\n                        module_action: 'remove_welcome_box'\n                    }\n                });\n            });\n\n            $('#wphb-activate-minification').change( function() {\n                var value = $(this).val();\n                $.ajax({\n                        url: ajaxurl,\n                        method: 'POST',\n                        data: {\n                            action: 'wphb_ajax',\n                            wphb_nonce: self.strings.activateMinificationNonce,\n                            nonce_name: 'wphb-activate-minification',\n                            module: self.module,\n                            module_action: 'activate_network_minification',\n                            data: {\n                                value: value\n                            }\n                        }\n                    })\n                    .done( function() {\n                        var notice = $('#wphb-notice-minification-settings-updated');\n                        notice.slideDown();\n                        setTimeout( function() {\n                            notice.slideUp();\n                        }, 5000 );\n                    });\n            });\n\n            $('#use_cdn').change( function() {\n                var data = {\n                    wphb_nonce: self.strings.advancedSettingsNonce,\n                    nonce_name: 'wphb-minification-advanced',\n                    module_action: 'toggle_use_cdn',\n                    data: {\n                        value: $(this).is(':checked')\n                    }\n                };\n                WPHB_Admin.utils.post( data, self.module )\n                    .always( function() {\n                        var notice = $('#wphb-notice-minification-settings-updated');\n                        notice.slideDown();\n                        setTimeout( function() {\n                            notice.slideUp();\n                        }, 5000 );\n                    }); \n            });\n\n            $('.wphb-performance-report-item').click( function( e ) {\n                var url = $(this).data( 'performance-url' );\n                if ( url ) {\n                    location.href = url;\n                }\n            });\n            return this;\n        },\n\n        startQuickSetup: function () {\n            // Show quick setup modal\n            var args = {};\n            args.class = \"wphb-modal small wphb-quick-setup-modal no-close\";\n            // Show quick setup modal\n            WDP.showOverlay(\"#wphb-quick-setup-modal\", args);\n        }\n    };\n}( jQuery ));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./_src/admin/js/admin-dashboard.js\n// module id = 4\n// module chunks = 0","(function($) {\n    WPHB_Admin.gzip = {\n        module: \"gzip\",\n        selectedServer: \"\",\n        $serverSelector: null,\n        $serverInstructions: [],\n        init: function() {\n            var self = this;\n            if (wphbGZipStrings) self.strings = wphbGZipStrings;\n            this.$serverSelector = $(\"#wphb-server-type\");\n            this.selectedServer = this.$serverSelector.val();\n            var instructionsList = $(\".wphb-server-instructions\");\n            instructionsList.each(function(i, element) {\n                self.$serverInstructions[$(this).data(\"server\")] = $(this);\n            });\n            this.showServerInstructions(this.selectedServer);\n            this.$serverSelector.change(function() {\n                var value = $(this).val();\n                self.hideCurrentInstructions();\n                self.showServerInstructions(value);\n                self.setServer(value);\n                self.selectedServer = value;\n            });\n            $(\"#toggle-apache-instructions\").click(function(e) {\n                e.preventDefault();\n                $(\".apache-instructions\").toggle();\n            });\n            $(\"#toggle-litespeed-instructions\").click(function(e) {\n                e.preventDefault();\n                $(\".litespeed-instructions\").toggle();\n            });\n            return this;\n        },\n        hideCurrentInstructions: function() {\n            var selected = this.selectedServer;\n            if (this.$serverInstructions[selected]) {\n                this.$serverInstructions[selected].hide();\n            }\n        },\n        showServerInstructions: function(server) {\n            if (typeof this.$serverInstructions[server] != \"undefined\") {\n                this.$serverInstructions[server].show();\n            }\n            if (\"apache\" == server || 'LiteSpeed' == server) {\n                $(\"#enable-cache-wrap\").show();\n            } else {\n                $(\"#enable-cache-wrap\").hide();\n            }\n        },\n        setServer: function(value) {\n            var self = this;\n            $.ajax({\n                url: ajaxurl,\n                method: \"POST\",\n                data: {\n                    action: \"wphb_ajax\",\n                    wphb_nonce: self.strings.setServerNonce,\n                    nonce_name: \"wphb-set-server\",\n                    module: self.module,\n                    module_action: \"set_server_type\",\n                    data: {\n                        type: value\n                    }\n                }\n            });\n        },\n    };\n})(jQuery);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./_src/admin/js/admin-gzip.js\n// module id = 5\n// module chunks = 0","( function( $ ) {\n    'use strict';\n\n    var WPHB_Admin = {\n        modules: [],\n        // Common functionality to all screens\n        init: function() {\n\n            function updatePerformanceGraph($wrap){\n                var $item = $wrap.find('.wphb-score-result-label'),\n                    val = parseInt($item.text(), 10) || 100,\n                    $circle = $wrap.find(\".wphb-score-graph-result\"),\n                    r, c, pct\n                    ;\n                r = $circle.attr('r');\n                c = Math.PI*(r*2);\n\n                if (val < 0) { val = 0;}\n                if (val > 100) { val = 100;}\n\n                pct = ((100-val)/100)*c;\n\n                $circle.css({ strokeDashoffset: pct});\n            }\n\n            function updatePerformanceResultsGraphs(){\n\n                // Update Overall Score\n                $(\".wphb-performance-report-overall-score\").each(function(){\n                    updatePerformanceGraph($(this));\n                });\n\n                // Update Current Score\n                $(\".wphb-performance-report-current-score\").each(function(){\n                    updatePerformanceGraph($(this));\n                });\n\n                // Update All Scores\n                $(\".wphb-performance-report-item-score\").each(function(){\n                    updatePerformanceGraph($(this));\n                });\n\n            }\n            window.register_events_performance = function(){\n                setTimeout(updatePerformanceResultsGraphs, 500);\n            };\n            $(function(){ setTimeout(updatePerformanceResultsGraphs, 500); });\n\n        },\n        initModule: function( module ) {\n            if ( this.hasOwnProperty( module ) ) {\n                this.modules[ module ] = this[ module ].init();\n                return this.modules[ module ];\n            }\n\n            return {};\n        },\n        getModule: function( module ) {\n            if ( typeof this.modules[ module ] != 'undefined' )\n                return this.modules[ module ];\n            else\n                return this.initModule( module );\n        }\n    };\n    \n\n    WPHB_Admin.utils = {\n\n        membershipModal: {\n            open: function() {\n                $( '#wphb-upgrade-membership-modal-link').trigger( 'click' );\n            }\n        },\n\n        post: function( data, module ) {\n            data.action = 'wphb_ajax';\n            data.module = module;\n            return $.ajax({\n                url: ajaxurl,\n                method: 'POST',\n                data: data\n            });\n        }\n    };\n\n    WPHB_Admin.notices = {\n\n        init: function() {\n            $( 'a.wphb-dismiss').click( function( e ) {\n                e.preventDefault();\n                var id = $(this).data( 'id' );\n                var nonce = $(this).data( 'nonce' );\n\n                $(this).parent( '.error' ).hide();\n            });\n        }\n    };\n\n    window.WPHB_Admin = WPHB_Admin;\n\n}( jQuery ) );\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./_src/admin/js/admin-main.js\n// module id = 6\n// module chunks = 0","( function( $ ) {\n    'use strict';\n\n    WPHB_Admin.minification = {\n\n        strings: null,\n        $checkFilesButton: null,\n        $checkFilesResultsContainer : null,\n        module: 'minification',\n        checkURLSList: null,\n        checkedURLS: 0,\n        $spinner: null,\n\n        init: function() {\n            var self = this;\n\n            if ( wphbMinificationStrings )\n                self.strings = wphbMinificationStrings;\n\n            // Filter action button on Minification page\n            $('#wphb-minification-filter-button').on('click', function(e) {\n                e.preventDefault();\n                $('#wphb-minification-filter').toggle('slow');\n            });\n\n            // Check files button\n            this.$checkFilesButton = $( '#check-files' );\n            this.$disableMinification = $('#wphb-disable-minification');\n            this.$spinner = $('.spinner');\n\n            if ( this.$checkFilesButton.length ) {\n                this.$checkFilesButton.click( function( e ) {\n                    e.preventDefault();\n                    $(this).attr('disabled', true);\n                    self.checkFiles( self.strings.finishedCheckURLsLink );\n                });\n            }\n\n            $('.wphb-discard').click( function(e) {\n                e.preventDefault();\n\n                if ( confirm( self.strings.discardAlert ) ) {\n                    location.reload();\n                }\n                return false;\n\n            });\n\n            $( '.wphb-enqueued-files input' ).on( 'change', function() {\n                $('.wphb-discard').attr( 'disabled', false );\n            });\n\n            $('#use_cdn').change( function() {\n                var data = {\n                    wphb_nonce: self.strings.advancedSettingsNonce,\n                    nonce_name: 'wphb-minification-advanced',\n                    module_action: 'toggle_use_cdn',\n                    data: {\n                        value: $(this).is(':checked')\n                    }\n                };\n                WPHB_Admin.utils.post( data, self.module )\n                    .always( function() {\n                        var notice = $('#wphb-notice-minification-advanced-settings-updated');\n                        notice.slideDown();\n                        setTimeout( function() {\n                            notice.slideUp();\n                        }, 5000 );\n                    });\n            });\n\n            this.$disableMinification.change( function() {\n                var value = $(this).is(':checked');\n\n                self.$spinner.css( 'visibility', 'visible' );\n\n                if ( self.timer && value ) {\n                    clearTimeout( self.timer );\n                    self.$spinner.css( 'visibility', 'hidden' );\n                }\n\n                self.timer = setTimeout(\n                    function() {\n                        $.ajax({\n                            url: ajaxurl,\n                            method: 'POST',\n                            data: {\n                                action: 'wphb_ajax',\n                                wphb_nonce: self.strings.toggleMinificationNonce,\n                                nonce_name: 'wphb-toggle-minification',\n                                module: self.module,\n                                module_action: 'toggle_minification',\n                                data: {\n                                    value: value\n                                }\n                            }\n                        }).always( function() {\n                            location.reload();\n                        });\n\n                    }, 3000\n                );\n\n\n            });\n\n            this.rowsCollection = new WPHB_Admin.minification.RowsCollection();\n\n            var rows = $('.wphb-border-row');\n\n            rows.each( function( index, row ) {\n                var _row;\n                if ( $(row).data('filter-secondary') ) {\n                    _row = new WPHB_Admin.minification.Row( $(row), $(row).data('filter'), $(row).data('filter-secondary') );\n                }\n                else {\n                    _row = new WPHB_Admin.minification.Row( $(row), $(row).data('filter') );\n                }\n                self.rowsCollection.push( _row );\n            });\n\n            $('#wphb-s').keyup( function() {\n                self.rowsCollection.addFilter( $(this).val(), 'primary' );\n                self.rowsCollection.applyFilters();\n            });\n\n            $('#wphb-secondary-filter').change( function() {\n                self.rowsCollection.addFilter( $(this).val(), 'secondary' );\n                self.rowsCollection.applyFilters();\n            });\n\n            $('.filter-toggles').change( function() {\n                var element = $(this);\n                var what = element.data('toggles');\n                var value = element.prop( 'checked' );\n                var visibleItems = self.rowsCollection.getVisibleItems();\n\n                for ( var i in visibleItems ) {\n                    visibleItems[i].change( what, value );\n                }\n            });\n\n            // Files selectors\n            var filesList = $('input.wphb-minification-file-selector');\n\n            filesList.click( function() {\n                var $this = $( this );\n                var element = self.rowsCollection.getItemById( $this.data( 'type' ), $this.data( 'handle' ) );\n                if ( ! element ) {\n                    return;\n                }\n\n                if ( $this.is( ':checked' ) ) {\n                    element.select();\n                }\n                else {\n                    element.unSelect();\n                }\n            });\n\n            // Include/exclude file checkbox\n            $('.toggle-cross').on('click', function(e) {\n                var $this = $(this);\n                var checkbox = $this.find( 'input.toggle-include' );\n                var row = self.rowsCollection.getItemById( $this.data( 'type' ), $this.data( 'handle' ) );\n                // Mark the item as include or not in the rows list\n                if ( row ) {\n                    row.change( 'include', ! checkbox.prop( 'checked' ) );\n                    row.getElement().find( 'input:not(.toggle-include)' ).prop('disabled', ! checkbox.prop( 'checked' ) );\n                }\n            });\n\n            // Handle two CDN checkboxes on Minification page\n            var checkboxes = $(\"input[type=checkbox][name=use_cdn]\");\n            checkboxes.change( function() {\n                var checkedState = $(this).prop('checked');\n\n                checkboxes.each( function() {\n                    this.checked = checkedState;\n                });\n            });\n\n            /* Show details of minification row on mobile devices */\n            $('body').on('click', '.wphb-minification-file-details', function(e) {\n                if ( window.innerWidth < 783 ) {\n                    $(this).parent().find('.wphb-minification-row-details').toggle('slow');\n                }\n            });\n\n            /*\n             Catch window resize and revert styles for responsive divs\n             1/4 of a second should be enough to trigger during device rotations (from portrait to landscape mode)\n             */\n            var minification_resize_rows = _.debounce(function() {\n\n                if ( window.innerWidth >= 783 ) {\n                    $('.wphb-minification-row-details').css('display', 'flex');\n                } else {\n                    $('.wphb-minification-row-details').css('display', 'none');\n                }\n\n            }, 250);\n\n            window.addEventListener('resize', minification_resize_rows);\n\n            return this;\n        },\n\n        checkFiles: function( redirect ) {\n            var self = this;\n\n            if ( typeof redirect === 'undefined' )\n                redirect = false;\n\n            if ( ! self.minificationStarted ) {\n                // Store the progress in session storage to persist during page reloads\n                // If there is no previous value, we init one with 10%\n                if ( sessionStorage.getItem('progress') === null ) {\n                    sessionStorage.setItem('progress', 10);\n                }\n                // Update progress bar\n                $('.wphb-scan-progress .wphb-scan-progress-text span').text( sessionStorage.getItem('progress') + '%' );\n                $('.wphb-scan-progress .wphb-scan-progress-bar span').width( sessionStorage.getItem('progress') + '%' );\n\n                // Send an AJAX request that will flag the check files as started\n                $.ajax({\n                    url: ajaxurl,\n                    data: {\n                        action: 'wphb_ajax',\n                        method: 'POST',\n                        wphb_nonce: self.strings.checkFilesNonce,\n                        nonce_name: 'wphb-minification-check-files',\n                        module: self.module,\n                        module_action: 'start_check',\n                        progress: sessionStorage.getItem('progress')\n                    }\n                }).success(function(results) {\n                    // Set the number of steps to be used in percentage count. Only if not set already.\n                    if ( ( typeof results.data.steps !== 'undefined' ) && ( sessionStorage.getItem('steps') === null ) ) {\n                        sessionStorage.setItem('steps', results.data.steps);\n                    }\n\n                    self.minificationStarted = true;\n                    self.checkFiles( redirect );\n                });\n            }\n            else {\n                $.ajax({\n                    url: ajaxurl,\n                    data: {\n                        action: 'wphb_ajax',\n                        method: 'POST',\n                        wphb_nonce: self.strings.checkFilesNonce,\n                        nonce_name: 'wphb-minification-check-files',\n                        module: self.module,\n                        module_action: 'check_step',\n                        progress: sessionStorage.getItem('progress'),\n                        step: Math.round( 80 / sessionStorage.getItem('steps') )\n                    }\n                }).always( function(results) {\n                    if ( typeof results.data.finished !== 'undefined' ) {\n                        // Finished\n                        if ( results.data.finished && redirect ) {\n                            // Clear session storage\n                            sessionStorage.clear();\n\n                            // Update progress bar\n                            $('.wphb-scan-progress .wphb-scan-progress-text span').text('100%');\n                            $('.wphb-scan-progress .wphb-scan-progress-bar span').width('100%');\n\n                            // Show enable cdn modal only for members\n                            if ( true === results.data.show_cnd ) {\n                                var args = {};\n                                args.class = \"wphb-modal small wphb-progress-modal no-close\";\n                                WDP.showOverlay(\"#enable-cdn-modal\", args);\n                            } else {\n                                window.location.href = redirect;\n                            }\n\n                            return;\n                        }\n                        // Next step\n                        else if ( ! results.data.finished ) {\n                            // Store the progress in session storage to persist during page reloads\n                            var progress = parseInt( sessionStorage.getItem('progress') ) + Math.round( 80 / sessionStorage.getItem('steps') );\n                            sessionStorage.setItem('progress', progress)\n\n                            if ( progress >= 90 ) {\n                                $('.wphb-progress-state .wphb-progress-state-text').text('Finalizing...');\n                            }\n                            if ( progress > 100 ) {\n                                progress = 100;\n                            }\n                            // Update progress bar\n                            $('.wphb-scan-progress .wphb-scan-progress-text span').text( progress + '%' );\n                            $('.wphb-scan-progress .wphb-scan-progress-bar span').width( progress + '%' );\n\n                            // Wait 3 seconds before calling again\n                            window.setTimeout( function() {\n                                self.checkFiles( redirect );\n                            }, 3000);\n                        }\n                    }\n                    else {\n                        // Error\n                        window.location.href = redirect;\n                        return;\n                    }\n                });\n            }\n\n\n        }\n\n    };\n\n    WPHB_Admin.minification.Row = function( _element, _filter, _filter_sec ) {\n        var $el = _element,\n            filter = _filter.toLowerCase(),\n            filterSecondary = false,\n            selected = false,\n            visible = true;\n\n        var $include = $el.find( '.toggle-include' ),\n            $combine = $el.find( '.toggle-combine' ),\n            $minify = $el.find( '.toggle-minify' );\n\n        var $posFooter = $el.find('.toggle-position-footer');\n\n        var $disableIcon = $el.find( '.toggle-cross > i' );\n\n        if ( _filter_sec ) {\n            filterSecondary = _filter_sec.toLowerCase();\n        }\n\n        return {\n            hide: function() {\n                $el.addClass( 'out-of-filter' );\n                visible = false;\n            },\n\n            show: function() {\n                $el.removeClass( 'out-of-filter' );\n                visible = true;\n            },\n\n            getElement: function() {\n                return $el;\n            },\n\n            getId: function() {\n                return $el.attr('id');\n            },\n\n            getFilter: function() {\n                return filter;\n            },\n\n            matchFilter: function( text ) {\n                if ( text === '' ) {\n                    return true;\n                }\n\n                text = text.toLowerCase();\n                return filter.search( text ) > -1;\n            },\n\n            matchSecondaryFilter: function( text ) {\n                if ( text === '' ) {\n                    return true;\n                }\n\n                if ( ! filterSecondary ) {\n                    return false;\n                }\n\n                text = text.toLowerCase();\n                return filterSecondary === text;\n            },\n\n            isVisible: function() {\n                return visible;\n            },\n\n            isSelected: function() {\n                return selected;\n            },\n\n            select: function() {\n                selected = true;\n            },\n\n            unSelect: function() {\n                selected = false;\n            },\n\n            change: function( what, value ) {\n                switch ( what ) {\n                    case 'minify': {\n                        $minify.prop( 'checked', value );\n                        break;\n                    }\n                    case 'combine': {\n                        $combine.prop( 'checked', value );\n                        break;\n                    }\n                    case 'include': {\n                        $disableIcon.removeClass();\n                        $include.prop( 'checked', value );\n                        if ( value ) {\n                            $el.removeClass('disabled');\n                            $disableIcon.addClass('dev-icon dev-icon-cross');\n                            $include.attr( 'checked', true );\n                        } else {\n                            $el.addClass('disabled');\n                            $disableIcon.addClass('wdv-icon wdv-icon-refresh');\n                            $include.removeAttr( 'checked' );\n                        }\n                        break;\n                    }\n                    case 'footer': {\n                        $posFooter.prop( 'checked', value );\n                        break;\n                    }\n                }\n            }\n\n        };\n    };\n\n    WPHB_Admin.minification.RowsCollection = function() {\n        var items = [];\n        var currentFilter = '';\n        var currentSecondaryFilter = '';\n\n        return {\n            push: function( row ) {\n                if ( typeof row === 'object' ) {\n                    items.push( row );\n                }\n            },\n\n            getItems: function() {\n                return items;\n            },\n\n            getItem: function( i ) {\n                if ( items[i] ) {\n                    return items[i];\n                }\n                return false;\n            },\n\n            /**\n             * Get a collection item by type and ID\n             * @param type\n             * @param id\n             */\n            getItemById: function( type, id ) {\n                var value = false;\n                for ( var i in items ) {\n                    if ( 'wphb-file-' + type + '-' + id === items[i].getId() ) {\n                        value = items[i];\n                        break;\n                    }\n                }\n                return value;\n            },\n\n            getVisibleItems: function() {\n                var visible = [];\n                for ( var i in items ) {\n                    if ( items[i].isVisible() ) {\n                        visible.push( items[i] );\n                    }\n                }\n                return visible;\n            },\n\n            getSelectedItems: function() {\n                var selected = [];\n\n                for ( var i in items ) {\n                    if ( items[i].isVisible() && items[i].isSelected() ) {\n                        selected.push( items[i] );\n                    }\n                }\n\n                return selected;\n            },\n\n            addFilter: function( filter, type ) {\n                if ( type === 'secondary' ) {\n                    currentSecondaryFilter = filter;\n                }\n                else {\n                    currentFilter = filter;\n                }\n            },\n\n            applyFilters: function() {\n                for ( var i in items ) {\n                    if ( items[i] ) {\n                        if ( items[i].matchFilter( currentFilter ) && items[i].matchSecondaryFilter( currentSecondaryFilter ) ) {\n                            items[i].show();\n                        }\n                        else {\n                            items[i].hide();\n                        }\n                    }\n\n                }\n            }\n        };\n    };\n\n}( jQuery ));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./_src/admin/js/admin-minification.js\n// module id = 7\n// module chunks = 0","( function( $ ) {\n    'use strict';\n    WPHB_Admin.performance = {\n\n        module: 'performance',\n        iteration: 0,\n        progress: 0,\n\n        init: function () {\n\n            var self = this;\n\n            if (wphbPerformanceStrings)\n                this.strings = wphbPerformanceStrings;\n\n            this.$runTestButton = $('#run-performance-test');\n\n            $(\".performance-report-table\").off('click', 'button');\n            $('.performance-report-table').on('click', '.wphb-performance-report-item-cta .additional-content-opener' && 'tr.wphb-performance-report-item', function (e) {\n                e.preventDefault();\n\n                var getParentPerformanceItem = $(this).closest(\".wphb-performance-report-item\"),\n                    getNextAdditionalContentRow = getParentPerformanceItem.nextUntil(\".wphb-performance-report-item\");\n\n                getNextAdditionalContentRow.toggleClass(\"wphb-performance-report-item-additional-content-opened\");\n\n                if (getNextAdditionalContentRow.hasClass(\"wphb-performance-report-item-additional-content-opened\")) {\n                    getParentPerformanceItem.addClass(\"wphb-performance-report-item-opened\");\n                } else {\n                    getParentPerformanceItem.removeClass(\"wphb-performance-report-item-opened\");\n                }\n\n            });\n\n            if (this.$runTestButton.length) {\n                this.$runTestButton.click(function (e) {\n                    e.preventDefault();\n                    $(this).attr('disabled', true);\n                    self.performanceTest(self.strings.finishedTestURLsLink);\n                });\n            }\n\n            // If a hash is present in URL, let's open the rule extra content\n            var hash = window.location.hash;\n            if (hash) {\n                var row = $(hash);\n                if (row.length) {\n                    row.find('.trigger-additional-content').trigger('click');\n                }\n\n            }\n\n            // Schedule show/hide day of week\n            $('select[name=\"email-frequency\"]').change(function () {\n                if ( '1' === $(this).val() ) {\n                    $(this).closest('.schedule-box').find('div.days-container').hide();\n                } else {\n                    $(this).closest('.schedule-box').find('div.days-container').show();\n                }\n            }).change();\n\n            // Remove recipient\n            $('body').on('click', '.wphb-remove-recipient', function (e) {\n                e.preventDefault();\n                $(this).closest('li').remove();\n                $('.scan-settings').find(\"input[id='scan_recipient'][value=\" + $(this).attr('data-id') + \"]\").remove();\n            });\n\n            // Add recipient\n            $('#add-receipt').click(function () {\n                var that = $(this);\n                $.ajax({\n                    type: 'POST',\n                    url: ajaxurl,\n                    data: {\n                        action: 'add_receipt_scan_receipts',\n                        'id': 'scan_receipts',\n                        user: $(\"#wphb-username-search\").val()\n                    },\n                    beforeSend: function () {\n                        that.attr('disabled', 'disabled');\n                    },\n                    success: function (data) {\n                        var user_row = $('<li/>');\n                        user_row.append($('<img/>').attr({\n                            src: data.avatar,\n                            width: '30'\n                        }));\n                        user_row.append($('<span class=\"name\"/>').html(data.name));\n                        if (data.is_current) {\n                            user_row.append($('<span/>').addClass('def-tag tag-generic').html(self.strings.youLabelText));\n                        }\n                        user_row.append($('<a/>').attr({\n                            'data-id': data.user_id,\n                            'class': 'remove float-r wphb-remove-recipient',\n                            'href': '#'\n                        }).html(self.strings.removeButtonText));\n\n                        $('.receipt ul').append(user_row);\n                        $(\"#wphb-username-search\").trigger('results:clear');\n                        $(\"#wphb-username-search\").val('');\n\n                        $('<input>').attr({\n                            type: 'hidden',\n                            id: 'scan_recipient',\n                            name: 'email-recipients[]',\n                            value: data.user_id\n                        }).appendTo('form.scan-settings');\n                    }\n                });\n                return false;\n            });\n\n            // Save report settings\n            $('body').on('submit', '.scan-frm', function (e) {\n                e.preventDefault();\n                var form_data = $(this).serialize();\n                var that = $(this);\n\n                $.ajax({\n                    url: ajaxurl,\n                    data: {\n                        type: 'POST',\n                        action: 'wphb_ajax',\n                        data: form_data,\n                        wphb_nonce: self.strings.performanceSaveSettingsNonce,\n                        nonce_name: 'wphb-performance-report-save-settings',\n                        module: self.module,\n                        module_action: 'save_report_settings'\n                    },\n                    beforeSend: function () {\n                        that.find('.button').attr('disabled', 'disabled');\n                    },\n                    success: function (response) {\n                        if (response.data !== undefined && response.data.url !== undefined) {\n                            location.href = response.data.url;\n                        } else {\n                            that.find('.button').removeAttr('disabled');\n                            self.showUpdateMessage();\n                        }\n                    }\n                });\n                return false;\n            });\n\n            var typingTimer;                //timer identifier\n            var doneTypingInterval = 1000;  //time in ms, 5 second for example\n            var $inputSearch = $(\"#wphb-username-search\");\n\n            //on keyup, start the countdown\n            $inputSearch.on('keyup', function () {\n                clearTimeout(typingTimer);\n                typingTimer = setTimeout(self.doneTyping, doneTypingInterval);\n            });\n\n            //on keydown, clear the countdown\n            $inputSearch.on('keydown', function () {\n                clearTimeout(typingTimer);\n            });\n\n            return this;\n\n        },\n\n        //user is \"finished typing,\" do something\n        doneTyping: function () {\n            //do something\n            var that = $(\"#wphb-username-search\");\n            var value = that.val();\n            if (value.length > 2) {\n                $.ajax({\n                    type: 'POST',\n                    url: ajaxurl,\n                    data: {\n                        'action': 'username_search_scan_receipts',\n                        'id': 'scan_receipts',\n                        'term': value\n                    },\n                    beforeSend: function () {\n                        that.trigger('progress:start');\n                    },\n                    success: function (data) {\n                        data = $.parseJSON(data);\n                        that.trigger('progress:stop');\n                        that.trigger('results:show', [data]);\n                    }\n                });\n            }\n\n            $(\"#wphb-username-search\").on('item:select', function () {\n                $(this).closest('.receipt').find('button').removeAttr('disabled');\n            });\n        },\n\n        showUpdateMessage: function () {\n            var notice = $('#wphb-notice-performance-report-settings-updated');\n            window.scrollTo(0,0);\n            notice.slideDown();\n            setTimeout( function() {\n                notice.slideUp();\n            }, 5000 );\n        },\n\n        performanceTest: function (redirect) {\n            var self = this;\n\n            if (typeof redirect === 'undefined')\n                redirect = false;\n\n            // Update progress bar\n            if ( self.progress < 90 ) {\n                self.progress += 35;\n            }\n            if ( self.progress > 100 ) {\n                self.progress = 90;\n            }\n            $('.wphb-scan-progress .wphb-scan-progress-text span').text(self.progress+'%');\n            $('.wphb-scan-progress .wphb-scan-progress-bar span').attr('style', 'width:'+self.progress+'%');\n\n            $.ajax({\n                url: ajaxurl,\n                data: {\n                    action: 'wphb_ajax',\n                    method: 'POST',\n                    wphb_nonce: self.strings.performanceTestNonce,\n                    nonce_name: 'wphb-welcome-performance-test',\n                    module: self.module,\n                    module_action: 'performance_test'\n                }\n            }).success(function (response) {\n                var finished = response.success;\n                if (!finished) {\n                    // Try again 5 seconds later\n                    window.setTimeout(function () {\n                        self.performanceTest(redirect);\n                    }, 5000);\n                }\n                else {\n                    if (redirect)\n                        window.location = redirect;\n                }\n\n            });\n\n        }\n    };\n}( jQuery ));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./_src/admin/js/admin-performance.js\n// module id = 8\n// module chunks = 0","( function( $ ) {\n    WPHB_Admin.uptime = {\n        module: 'uptime',\n        $dataRangeSelector: null,\n        chartData: null,\n        timer:null,\n        $spinner: null,\n        init: function() {\n            this.$spinner = $('.spinner');\n            this.strings = wphbUptimeStrings;\n            this.$dataRangeSelector = $( '#wphb-uptime-data-range' );\n            this.chartData = $('#uptime-chart-json').val();\n            this.$disableUptime = $('#wphb-disable-uptime');\n\n            this.$dataRangeSelector.change( function() {\n                window.location.href = $(this).find( ':selected' ).data( 'url' );\n            });\n\n            var self = this;\n            this.$disableUptime.change( function() {\n                self.$spinner.css( 'visibility', 'visible' );\n                var value = $(this).is(':checked');\n                if ( value && self.timer ) {\n                    clearTimeout( self.timer );\n                    self.$spinner.css( 'visibility', 'hidden' );\n                }\n                else {\n                    // you have 3 seconds to change your mind\n                    self.timer = setTimeout( function() {\n                        location.href = self.strings.disableUptimeURL;\n                    }, 3000 );\n                }\n\n                return;\n            });\n\n            this.drawChart();\n\n            /* Re-check Uptime status */\n            $('#uptime-re-check-status').on( 'click', function(e){\n                e.preventDefault();\n                location.reload();\n            });\n        },\n\n        drawChart: function() {\n            var data = new google.visualization.DataTable();\n            data.addColumn('datetime', 'Day');\n            data.addColumn('number', 'Response Time (ms)');\n\n            var chart_array = JSON.parse( this.chartData );\n            for (var i = 0; i < chart_array.length; i++) {\n                chart_array[i][0] = new Date( chart_array[i][0] );\n                chart_array[i][1] = Math.round( chart_array[i][1] );\n\n                /* brings the graph below the x axis */\n                if ( Math.round( chart_array[i][1] ) == 0 ) {\n                    chart_array[i][1] = -100;\n                }\n\n            }\n\n            data.addRows(chart_array);\n\n            var options = {\n                chartArea: {\n                    left: 80,\n                    top: 20,\n                    width: '90%',\n                    height: '90%'\n                },\n                colors: ['#24ADE5'],\n                curveType: 'function',\n                /*interpolateNulls: true,*/\n                legend: { position: 'none' },\n                vAxis: {\n                    format: '#,### ms',\n                    viewWindow: { min: 0 } /* don't display negative values */\n                },\n                tooltip: { isHtml: true },\n                series: {\n                    0: { axis: 'Resp' }\n                },\n                axes: {\n                    y: {\n                        Resp: { label: 'Response Time (ms)' }\n                    }\n                }\n            };\n\n            var chart = new google.visualization.LineChart(document.getElementById('uptime-chart'));\n            chart.draw(data, options);\n\n            $(window).resize(function(){\n                chart.draw(data, options);\n            });\n        }\n    };\n}(jQuery));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./_src/admin/js/admin-uptime.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}