{"version":3,"sources":["coursepress_settings.js"],"names":["CoursePress","Define","$","View","extend","template_id","el","initialize","model","this","on","setUpUI","render","select2","getModel","toJSON","settingView","updateModel","ev","first","sender","currentTarget","name","attr","value","val","is","split","shift","length","_","each","t","doc","win","events","change [name]","click .cp-input-group li","rootModel","editor","current","enabled","from","email","subject","content","auto_email","self","tinyMCE","get","getContent","trigger","toggleBox","target","key","data","setValues","siblings","removeClass","addClass","names","n","field","_coursepress","email_sections","section","html","title","description","content_help_text","click .cp-select-list.cp-capabilities li","window","console","log","showHideCaps","capsDiv","setActiveItem","iris","CertificatePreview","className","click .cp-btn","prototype","apply","$el","appendTo","focus [name=\"cert_text_color\"]","change [name=\"use_cp_default\"]","change [name=\"enabled\"]","click [name=\"preview_certificate\"]","certBG","AddImage","color","palettes","hide","width","change","cert_text_color","contentEditor","updateCertificateContent","certBox","isTrue","use_cp_default","showColorPicker","toggleCertificateSettings","boxes","is_checked","previewCertificate","Request","set","openPreview","save","pdf","preview","click .cp-select-list.cp-type li","click .cp-select-list.cp-sub-type li","typeSelect","subtype","subTypeSelect","Extension","Post","type","options","isObject","input","contains","c","controller","setting","extensions","settingObject","ext","showExtension","popup","PopUp","message","messages","no_mp_woo","prop","without","push","hideExtension","tpl","remove","off","MPActivated","CourseImport","submit","change [name=\"import\"]","uploadModel","Upload","errorContainer","uploadFile","valid","validateFile","uploadCourse","upload","maybeContinue","file","file_type","substring","lastIndexOf","text","invalid_file_type","show","setUpForms","importForm","Settings","settings","currentPage","currentView","click .cp-menu-item","click .save-coursepress-setting","click .step-cancel","once","getGeneralSettingView","getSlugsSettingView","getEmailSettingView","getCapabilitiesView","getCertificateView","getShortCodesView","getExtensionsView","getImportExportView","arguments","settingPages","cancelButton","saveButton","setCurrentPage","setPage","currentMenu","removeAttr","setSettingPage","general","GeneralSettings","slugs","SlugsSettings","EmailSettings","capabilities","CapabilitiesSettings","basic_certificate","CertificateSettings","shortcodes","ShortcodesSettings","ExtensionsSettings","ImportExportSettings","saveSetting","settingModel","button","after_update","goToGeneral","scrollTop"],"mappings":"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","file":"../coursepress_settings.min.js","sourcesContent":["/*! CoursePress - v3.0.0\n * https://premium.wpmudev.org/project/coursepress-pro/\n * Copyright (c) Thu Jul 06 2017; * Licensed GPLv2+ */\n/* global CoursePress */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    CoursePress.Define( 'GeneralSettings', function( $ ) {\r\n        return CoursePress.View.extend({\r\n            template_id: 'coursepress-general-setting-tpl',\r\n            el: $('#coursepress-setting-general'),\r\n            initialize: function( model ) {\r\n                this.model = model;\r\n\r\n                this.on( 'view_rendered', this.setUpUI, this );\r\n                this.render();\r\n            },\r\n            setUpUI: function() {\r\n                this.$('select').select2();\r\n            },\r\n            getModel: function() {\r\n                return this.model.toJSON();\r\n            }\r\n        });\r\n    });\r\n})();\n/* global CoursePress */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    CoursePress.Define( 'SlugsSettings', function($) {\r\n        return CoursePress.View.extend({\r\n            template_id: 'coursepress-slugs-setting-tpl',\r\n            el: $('#coursepress-setting-slugs'),\r\n            initialize: function( model, settingView ) {\r\n                this.model = model;\r\n                this.settingView = settingView;\r\n\r\n                this.on( 'view_rendered', this.setUpUI, this );\r\n                this.render();\r\n            },\r\n            setUpUI: function() {\r\n                this.$('select').select2();\r\n            },\r\n            updateModel: function(ev) {\r\n                var sender = $(ev.currentTarget),\r\n                    name = sender.attr('name'),\r\n                    value = sender.val(),\r\n                    first, model;\r\n\r\n                if ( sender.is('[type=\"checkbox\"],[type=\"radio\"]') ) {\r\n                    value = sender.is(':checked') ? value : false;\r\n                }\r\n\r\n                name = name.split('.');\r\n                first = name.shift();\r\n\r\n                if ( this.model[ first ] ) {\r\n                    model = this.model[ first ];\r\n                } else {\r\n                    model = {};\r\n                }\r\n\r\n                if ( name.length ) {\r\n                    _.each(name, function (t) {\r\n                        model[t] = value;\r\n                    }, this);\r\n                    this.model[first] = model;\r\n                } else {\r\n                    this.model[first] = value;\r\n                }\r\n            },\r\n            getModel: function() {\r\n                return this.model;\r\n            }\r\n        });\r\n    });\r\n})();\n/* global CoursePress, _, tinyMCE */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    CoursePress.Define( 'EmailSettings', function( $, doc, win ) {\r\n        return CoursePress.View.extend({\r\n            template_id: 'coursepress-emails-setting-tpl',\r\n            el: $( '#coursepress-setting-email' ),\r\n            events: {\r\n                'change [name]': 'updateModel',\r\n                'click .cp-input-group li': 'toggleBox'\r\n            },\r\n            rootModel: false,\r\n            editor: false,\r\n            current: 'registration',\r\n            model: {\r\n                enabled: 1,\r\n                from: '',\r\n                email: '',\r\n                subject: '',\r\n                content: '',\r\n                auto_email: false\r\n            },\r\n            initialize: function( model ) {\r\n                this.rootModel = model;\r\n\r\n                this.on( 'view_rendered', this.setUpUI, this );\r\n                this.render();\r\n            },\r\n            setUpUI: function() {\r\n                var self = this;\r\n\r\n                //this.$( '.switch-tmce' ).trigger( 'click' );\r\n\r\n                if ( tinyMCE.get( 'content' ) ) {\r\n                    this.editor = tinyMCE.get( 'content' );\r\n                    this.editor.on( 'change', function() {\r\n                        var content = self.editor.getContent();\r\n                        self.model.content = content;\r\n                        self.$('#content').val( content );\r\n                    });\r\n                }\r\n\r\n                // Select the first item as active\r\n                this.$('.cp-input-group li').first().trigger( 'click' );\r\n            },\r\n            toggleBox: function(ev) {\r\n                var target = $(ev.currentTarget),\r\n                    key = target.data( 'key' );\r\n\r\n                this.current = key;\r\n                if ( this.rootModel[key] ) {\r\n                    this.model = this.rootModel[key];\r\n                    this.setValues(this.model);\r\n                }\r\n\r\n                target.siblings().removeClass('active');\r\n                target.addClass('active');\r\n            },\r\n            setValues: function( model ) {\r\n                var names = this.$( '[name]' );\r\n\r\n                this.$( '.switch-html' ).trigger( 'click' );\r\n\r\n                _.each( names, function( n ) {\r\n                    var field = $(n),\r\n                        name = field.attr( 'name' );\r\n\r\n                    if ( model[name] ) {\r\n                        field.val( model[name] );\r\n                    }\r\n                }, this );\r\n\r\n                this.$( '.switch-tmce' ).trigger( 'click' );\r\n\r\n                if ( win._coursepress.email_sections[ this.current ] ) {\r\n                    var section = win._coursepress.email_sections[ this.current ];\r\n                    this.$( '#course-email-heading' ).html( section.title );\r\n                    this.$( '#course-email-desc' ).html( section.description );\r\n                    this.$( '.cp-alert-info' ).html( section.content_help_text );\r\n                }\r\n            },\r\n            getModel: function() {\r\n                return this.rootModel;\r\n            },\r\n            updateModel: function( ev ) {\r\n                var sender = this.$( ev.currentTarget ),\r\n                    value = sender.val(),\r\n                    name = sender.attr( 'name' );\r\n\r\n                if ( 'checkbox' === sender.attr( 'type' ) ) {\r\n                    value = sender.is( ':checked' ) ? value : false;\r\n                }\r\n\r\n                this.model[ name ] = value;\r\n\r\n                this.rootModel[ this.current ] = this.model;\r\n            }\r\n        });\r\n    });\r\n})();\n/* global CoursePress */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    CoursePress.Define( 'CapabilitiesSettings', function( $ ) {\r\n        return CoursePress.View.extend({\r\n            template_id: 'coursepress-capabilities-setting-tpl',\r\n            el: $( '#coursepress-setting-capabilities' ),\r\n            events: {\r\n                'click .cp-select-list.cp-capabilities li': 'showHideCaps',\r\n                'change [name]': 'updateModel'\r\n            },\r\n            current: 'instructor',\r\n            initialize: function( model ) {\r\n                this.model = model;\r\n                this.render();\r\n            },\r\n\r\n            updateModel: function(ev) {\r\n                var sender = $(ev.currentTarget),\r\n                    name = sender.attr('name'),\r\n                    value = sender.val();\r\n\r\n                if ( sender.is('[type=\"checkbox\"],[type=\"radio\"]') ) {\r\n                    value = sender.is(':checked') ? value : false;\r\n                }\r\n\r\n                if ( ! this.model[this.current] ) {\r\n                    this.model[this.current] = {};\r\n                }\r\n                this.model[this.current][name] = value;\r\n            },\r\n\r\n            getModel: function() {\r\n                window.console.log(this.model);\r\n                return this.model;\r\n            },\r\n\r\n            showHideCaps: function(ev) {\r\n                var target = $(ev.currentTarget);\r\n                var capsDiv = target.data( 'id' );\r\n                this.setActiveItem( target );\r\n                this.$( '.cp-caps-fields' ).addClass( 'inactive' );\r\n                this.$('#' + capsDiv ).removeClass( 'inactive' );\r\n            },\r\n\r\n            setActiveItem: function(target) {\r\n                target.siblings().removeClass('active');\r\n                target.addClass( 'active' );\r\n            }\r\n        });\r\n    });\r\n})();\n/* global CoursePress, _, tinyMCE */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    CoursePress.Define( 'CertificateSettings', function( $, doc ) {\r\n        var iris, CertificatePreview;\r\n\r\n        $(doc).on( 'click', function(ev) {\r\n           var sender = $(ev.currentTarget);\r\n\r\n           if ( iris && ( ! sender.is(iris) || ! sender.is('.iris-picker') ) ) {\r\n               iris.iris('hide');\r\n               iris = false;\r\n           }\r\n        });\r\n\r\n        CertificatePreview = CoursePress.View.extend({\r\n            template_id: 'coursepress-cert-preview',\r\n            className: 'coursepress-popup-preview',\r\n            events: {\r\n                'click .cp-btn': 'remove'\r\n            },\r\n            render: function() {\r\n                CoursePress.View.prototype.render.apply( this );\r\n                this.$el.appendTo( 'body' );\r\n            }\r\n        });\r\n\r\n        return CoursePress.View.extend({\r\n            template_id: 'coursepress-certificate-setting-tpl',\r\n            el: $('#coursepress-setting-basic_certificate'),\r\n            events: {\r\n                'focus [name=\"cert_text_color\"]': 'showColorPicker',\r\n                'change [name]': 'updateModel',\r\n                'change [name=\"use_cp_default\"]': 'toggleCertificateSettings',\r\n                'change [name=\"enabled\"]': 'toggleCertificateSettings',\r\n                'click [name=\"preview_certificate\"]': 'previewCertificate'\r\n            },\r\n            initialize: function( model ) {\r\n                this.model = model;\r\n\r\n                this.on( 'view_rendered', this.setUpUI, this );\r\n                this.render();\r\n            },\r\n            setUpUI: function() {\r\n                var self = this;\r\n\r\n                this.$('select').select2();\r\n                this.certBG = new CoursePress.AddImage( this.$('#coursepress-cert-bg' ) );\r\n                this.color = this.$('[name=\"cert_text_color\"]');\r\n\r\n                this.color.iris({\r\n                    palettes: true,\r\n                    hide: true,\r\n                    width: 220,\r\n                    change: function( ) {\r\n                        self.model.cert_text_color = self.color.iris('color');\r\n                    }\r\n                });\r\n\r\n                this.$('#content_certificate').val( this.model.content );\r\n                this.$('.switch-tmce').trigger('click');\r\n\r\n                if ( tinyMCE.get( 'content_certificate' ) ) {\r\n                    this.contentEditor = tinyMCE.get( 'content_certificate' );\r\n                    this.contentEditor.on( 'change', function() {\r\n                        self.updateCertificateContent();\r\n                    }, this );\r\n                }\r\n\r\n                this.certBox = this.$('.box-cert-settings' );\r\n\r\n                if ( ! _.isTrue( this.model.enabled ) || _.isTrue( this.model.use_cp_default ) ) {\r\n                    this.certBox.hide();\r\n                }\r\n            },\r\n            updateCertificateContent: function() {\r\n                this.model.content = this.contentEditor.getContent();\r\n            },\r\n            showColorPicker: function() {\r\n                if ( this.color ) {\r\n                    this.color.iris('show');\r\n                    iris = this.color;\r\n                }\r\n            },\r\n            updateModel: function(ev) {\r\n                var sender = $(ev.currentTarget),\r\n                    name = sender.attr('name'),\r\n                    value = sender.val(),\r\n                    first, model;\r\n\r\n                if ( sender.is('[type=\"checkbox\"],[type=\"radio\"]') ) {\r\n                    value = sender.is(':checked') ? value : false;\r\n                }\r\n\r\n                name = name.split('.');\r\n                first = name.shift();\r\n                model = this.model[first];\r\n\r\n                if ( name.length ) {\r\n                    _.each(name, function (t) {\r\n                        model[t] = value;\r\n                    }, this);\r\n                    this.model[first] = model;\r\n                } else {\r\n                    this.model[first] = value;\r\n                }\r\n            },\r\n            getModel: function() {\r\n                return this.model;\r\n            },\r\n            toggleCertificateSettings: function(ev) {\r\n                var boxes = this.$('.box-cert-settings'),\r\n                    sender = $(ev.currentTarget),\r\n                    is_checked = sender.is(':checked');\r\n\r\n                if ( 'use_cp_default' === sender.attr('name') ) {\r\n                    boxes[ is_checked ? 'slideUp' : 'slideDown']();\r\n                } else {\r\n                    boxes[ is_checked ? 'slideDown' : 'slideUp']();\r\n                }\r\n            },\r\n            previewCertificate: function() {\r\n                var model = new CoursePress.Request( this.getModel() );\r\n                model.set( 'action', 'preview_certificate' );\r\n                model.on( 'coursepress:success_preview_certificate', this.openPreview, this );\r\n                model.save();\r\n            },\r\n            openPreview: function( data ) {\r\n                if ( data.pdf ) {\r\n                    this.preview = new CertificatePreview(data);\r\n                } else {\r\n                    // @todo: show friendly error\r\n                }\r\n            }\r\n        });\r\n    });\r\n})();\n/* global CoursePress */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    CoursePress.Define( 'ShortcodesSettings', function( $ ) {\r\n        return CoursePress.View.extend({\r\n            template_id: 'coursepress-shortcodes-setting-tpl',\r\n            el: $('#coursepress-setting-shortcodes'),\r\n            events: {\r\n                'click .cp-select-list.cp-type li': 'typeSelect',\r\n                'click .cp-select-list.cp-sub-type li': 'subTypeSelect'\r\n            },\r\n\r\n            typeSelect: function(ev) {\r\n                var target = $(ev.currentTarget);\r\n                var subtype = target.data( 'id' );\r\n                //this.setActiveItem( target );\r\n                this.$('.cp-sub-type').addClass( 'inactive' );\r\n                this.$('.cp-sub-type li').removeClass('active');\r\n                this.$('#' + subtype ).removeClass( 'inactive' );\r\n                this.$( '.cp-shortcode-details' ).removeClass( 'active' ).addClass( 'inactive' );\r\n                this.$('#' + subtype + ' li').first().trigger( 'click' );\r\n                target.siblings().removeClass('active');\r\n                target.addClass( 'active' );\r\n            },\r\n\r\n            subTypeSelect: function(ev) {\r\n                var target = $(ev.currentTarget);\r\n                this.setActiveItem( target );\r\n                this.$( '.cp-shortcode-details' ).removeClass( 'active' ).addClass( 'inactive' );\r\n                this.$( '#' + target.data( 'id' ) ).removeClass( 'inactive' ).addClass( 'active' );\r\n            },\r\n\r\n            setActiveItem: function(target) {\r\n                target.siblings().removeClass('active');\r\n                target.addClass( 'active' );\r\n            }\r\n        });\r\n    });\r\n})();\n/* global CoursePress, _ */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    CoursePress.Define( 'ExtensionsSettings', function( $, doc, win ) {\r\n        var Extension, Post;\r\n\r\n        Extension = CoursePress.View.extend({\r\n            type: false,\r\n            initialize: function(model, options) {\r\n                _.extend( this, options );\r\n                this.model[this.type] = ! _.isObject( model ) ? {} : model;\r\n                this.render();\r\n            },\r\n            render: function() {\r\n                CoursePress.View.prototype.render.apply( this );\r\n\r\n                this.$el.appendTo( '#extension-' + this.type );\r\n\r\n                return this;\r\n            },\r\n            updateModel: function( ev ) {\r\n                var input, name, type, value;\r\n\r\n                input = $(ev.currentTarget);\r\n                name = input.attr('name');\r\n\r\n                if ( ( type = input.attr('type') ) &&\r\n                    _.contains(['checkbox', 'radio'], type ) ) {\r\n                    value = input.is(':checked') ? input.val() : false;\r\n                } else {\r\n                    value = input.val();\r\n                }\r\n\r\n                this.model[this.type][name] = value;\r\n                var c = this.controller.setting.model.get(this.type);\r\n                window.console.log(c);\r\n                this.controller.setting.model.set( this.type, this.model[this.type] );\r\n            }\r\n        });\r\n\r\n        Post = new CoursePress.Request();\r\n\r\n        return CoursePress.View.extend({\r\n            template_id: 'coursepress-extensions-setting-tpl',\r\n            el: $( '#coursepress-setting-extensions' ),\r\n            extensions: {},\r\n            setting: false,\r\n            initialize: function( extensions, settingObject ) {\r\n                this.model = {extensions: extensions};\r\n                this.setting = settingObject;\r\n\r\n                this.render();\r\n            },\r\n            render: function() {\r\n                CoursePress.View.prototype.render.apply( this );\r\n\r\n                _.each( this.model.extensions, function( ext ) {\r\n                    this.showExtension(ext);\r\n                }, this );\r\n            },\r\n            updateModel: function(ev) {\r\n                var target = this.$(ev.currentTarget),\r\n                    value = target.val(),\r\n                    is_checked = target.is(':checked'),\r\n                    extensions = this.model.extensions;\r\n\r\n                if ( is_checked ) {\r\n                    if ( 'woocommerce' === value && _.contains( extensions, 'marketpress') ||\r\n                        'marketpress' === value && _.contains( extensions, 'woocommerce' ) ) {\r\n                        this.popup = new CoursePress.PopUp({\r\n                            type: 'error',\r\n                            message: win._coursepress.messages.no_mp_woo\r\n                        });\r\n\r\n                        target.prop( 'checked', false );\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                this.model.extensions = _.without( this.model.extensions, value );\r\n\r\n                if ( is_checked ) {\r\n                    this.model.extensions.push( value );\r\n                    this.showExtension(value);\r\n                } else {\r\n                    this.hideExtension(value);\r\n                }\r\n            },\r\n            showExtension: function( value ) {\r\n                if ( ! this.extensions[value] ) {\r\n                    var tpl = $('#coursepress-' + value + '-tpl' );\r\n\r\n                    if ( ! tpl.length ) {\r\n                        return;\r\n                    }\r\n\r\n                    // Initialize extension settings\r\n                    this.extensions[value] = new Extension( this.setting.model.get(value), {\r\n                        template_id: 'coursepress-' + value + '-tpl',\r\n                        type: value,\r\n                        controller: this\r\n                    });\r\n                }\r\n            },\r\n            hideExtension: function( value ) {\r\n                if ( this.extensions[value] ) {\r\n                    this.extensions[value].remove();\r\n                    delete this.extensions[value];\r\n                }\r\n            },\r\n            getModel: function() {\r\n                var extensions = this.model.extensions;\r\n\r\n                // MP and woo should not be activated at the same time\r\n                if ( _.contains( extensions, 'marketpress') &&\r\n                    _.contains( extensions, 'woocommerce' ) ) {\r\n                    this.popup = new CoursePress.PopUp({\r\n                        type: 'error',\r\n                        message: win._coursepress.messages.no_mp_woo\r\n                    });\r\n                    return false;\r\n\r\n                } else if ( _.contains( extensions, 'marketpress' ) ) {\r\n                    // Extract and activate MP\r\n                    Post.set( 'action', 'activate_marketpress' );\r\n                    Post.off( 'coursepress:success_activate_marketpress' );\r\n                    Post.on( 'coursepress:success_activate_marketpress', this.MPActivated, this );\r\n                    Post.save();\r\n                } else if ( _.contains( extensions, 'woocommerce' ) ) {\r\n                    // Check WooCommerce and activae woo\r\n                }\r\n\r\n                return extensions;\r\n            },\r\n            MPActivated: function() {}\r\n        });\r\n    });\r\n\r\n})();\n/* global CoursePress */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    CoursePress.Define( 'ImportExportSettings', function( $, doc, win ) {\r\n        var CourseImport, CourseExport;\r\n\r\n        CourseImport = CoursePress.View.extend({\r\n            events: {\r\n                'submit': 'uploadFile',\r\n                'change [name=\"import\"]': 'validateFile',\r\n                'change [name]': 'updateModel'\r\n            },\r\n            initialize: function() {\r\n                this.uploadModel = new CoursePress.Upload();\r\n                this.model = new CoursePress.Request();\r\n                this.render();\r\n            },\r\n            render: function() {\r\n                this.errorContainer = this.$('.cp-alert-error');\r\n            },\r\n            uploadFile: function() {\r\n                var valid = this.validateFile(), timer;\r\n\r\n                if ( valid ) {\r\n                    this.uploadModel.set( 'type', 'import_file' );\r\n                    this.uploadModel.off( 'coursepress:success_import_file' );\r\n                    this.uploadModel.on( 'coursepress:success_import_file', this.uploadCourse, this );\r\n                    this.uploadModel.upload();\r\n                }\r\n\r\n                return false;\r\n            },\r\n\r\n            uploadCourse: function( data ) {\r\n                this.model.set( 'action', 'import_course' );\r\n                this.model.set( data );\r\n                this.model.off( 'coursepress:success_import_course' );\r\n                this.model.on( 'coursepress:successs_import_course', this.maybeContinue, this );\r\n                this.model.save();\r\n            },\r\n\r\n            maybeContinue: function( data ) {\r\n\r\n            },\r\n\r\n            validateFile: function() {\r\n                var file = this.$('[name=\"import\"]'),\r\n                    value = file.val(),\r\n                    file_type = value.substring( value.lastIndexOf('.') +1 );\r\n\r\n                if ( 'json' !== file_type ) {\r\n                    this.errorContainer.html( win._coursepress.text.invalid_file_type ).show();\r\n                    this.$el.addClass('active');\r\n                    return false;\r\n                } else {\r\n                    this.errorContainer.hide();\r\n                    this.$el.removeClass('active');\r\n                    return true;\r\n                }\r\n            }\r\n        });\r\n\r\n        return CoursePress.View.extend({\r\n            template_id: 'coursepress-import-export-setting-tpl',\r\n            el: $('#coursepress-setting-import-export'),\r\n            initialize: function() {\r\n                this.on( 'view_rendered', this.setUpForms, this );\r\n                this.render();\r\n            },\r\n            setUpForms: function() {\r\n                this.importForm = CourseImport.extend({el: this.$('#form-import') });\r\n                this.importForm = new this.importForm();\r\n                //this.exportForm = this.$('#form-export');\r\n            }\r\n        });\r\n    });\r\n})();\n/* global CoursePress */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    CoursePress.Define( 'Settings', function( $, doc, win ) {\r\n        var Settings;\r\n\r\n        Settings = CoursePress.View.extend({\r\n            el: $('#coursepress-settings'),\r\n            settings: {},\r\n            currentPage: 'general', // Start with general settings\r\n            currentView: false,\r\n            events: {\r\n                'click .cp-menu-item': 'setSettingPage',\r\n                'click .save-coursepress-setting': 'saveSetting',\r\n                'click .step-cancel': 'goToGeneral'\r\n            },\r\n            initialize: function() {\r\n                this.once( 'coursepress:admin_setting_general', this.getGeneralSettingView, this );\r\n                this.once( 'coursepress:admin_setting_slugs', this.getSlugsSettingView, this );\r\n                this.once( 'coursepress:admin_setting_email', this.getEmailSettingView, this );\r\n                this.once( 'coursepress:admin_setting_capabilities', this.getCapabilitiesView, this );\r\n                this.once( 'coursepress:admin_setting_basic_certificate', this.getCertificateView, this );\r\n                this.once( 'coursepress:admin_setting_shortcodes', this.getShortCodesView, this );\r\n                this.once( 'coursepress:admin_setting_extensions', this.getExtensionsView, this );\r\n                this.once( 'coursepress:admin_setting_import-export', this.getImportExportView, this );\r\n\r\n                CoursePress.View.prototype.initialize.apply( this, arguments );\r\n            },\r\n\r\n            render: function() {\r\n                this.settingPages = this.$('.cp-menu-item');\r\n                this.cancelButton = this.$('.step-cancel');\r\n                this.saveButton = this.$('.save-coursepress-setting' );\r\n                this.on( 'coursepress:admin_setting', this.setCurrentPage, this );\r\n                this.setPage( this.currentPage );\r\n            },\r\n\r\n            setCurrentPage: function() {\r\n                this.currentMenu = this.$('.cp-menu-item.setting-' + this.currentPage );\r\n                this.currentView = this.$( '#coursepress-setting-' + this.currentPage );\r\n\r\n                this.currentMenu.addClass('active');\r\n                this.currentMenu.siblings().removeClass('active');\r\n                this.currentView.addClass( 'tab-active' );\r\n                this.currentView.siblings().removeClass('tab-active');\r\n\r\n                if ( 'general' === this.currentPage ) {\r\n                    // Disable cancel button\r\n                    this.cancelButton.attr('disabled', 'disabled');\r\n                } else {\r\n                    this.cancelButton.removeAttr('disabled');\r\n                }\r\n\r\n                if ( 'import-export' === this.currentPage ) {\r\n                    this.cancelButton.hide();\r\n                    this.saveButton.hide();\r\n                } else {\r\n                    this.cancelButton.show();\r\n                    this.saveButton.show();\r\n                }\r\n            },\r\n            setPage: function( setting ) {\r\n                this.currentPage = setting;\r\n\r\n                this.trigger( 'coursepress:admin_setting', setting );\r\n                this.trigger( 'coursepress:admin_setting_' + setting );\r\n            },\r\n\r\n            setSettingPage: function(ev) {\r\n                var target = $(ev.currentTarget),\r\n                    setting = target.data('setting');\r\n\r\n                this.setPage( setting );\r\n            },\r\n\r\n            getGeneralSettingView: function() {\r\n                this.settings.general = new CoursePress.GeneralSettings( this.model.get('general') );\r\n            },\r\n\r\n            getSlugsSettingView: function() {\r\n                this.settings.slugs = new CoursePress.SlugsSettings( this.model.get( 'slugs' ) );\r\n            },\r\n\r\n            getEmailSettingView: function() {\r\n                this.settings.email = new CoursePress.EmailSettings( this.model.get( 'email' ) );\r\n            },\r\n\r\n            getCapabilitiesView: function() {\r\n                this.settings.capabilities = new CoursePress.CapabilitiesSettings( this.model.get('capabilities') );\r\n            },\r\n\r\n            getCertificateView: function() {\r\n                this.settings.basic_certificate = new CoursePress.CertificateSettings( this.model.get('basic_certificate') );\r\n            },\r\n\r\n            getShortCodesView: function() {\r\n                this.settings.shortcodes = new CoursePress.ShortcodesSettings();\r\n            },\r\n\r\n            getExtensionsView: function() {\r\n                this.settings.extensions = new CoursePress.ExtensionsSettings( this.model.get('extensions'), this );\r\n            },\r\n\r\n            getImportExportView: function() {\r\n                this.settings['import-export'] = new CoursePress.ImportExportSettings();\r\n            },\r\n\r\n            saveSetting: function(ev) {\r\n                var settingModel = this.settings[ this.currentPage ],\r\n                    button = this.$(ev.currentTarget),\r\n                    model = settingModel.getModel();\r\n\r\n                if ( model ) {\r\n                    button.addClass('cp-progress');\r\n                    this.model.set(this.currentPage, model);\r\n                    this.model.set('action', 'update_settings');\r\n                    this.model.off( 'coursepress:success_update_settings' );\r\n                    this.model.on( 'coursepress:success_update_settings', this.after_update, this );\r\n                    this.model.off( 'coursepress:error_update_settings' );\r\n                    this.model.on( 'coursepress:error_update_settings', this.after_update, this );\r\n                    this.model.save();\r\n                }\r\n            },\r\n            goToGeneral: function() {\r\n                this.$( '.cp-menu-item.setting-general' ).trigger( 'click' );\r\n                $(win).scrollTop(0);\r\n            },\r\n\r\n            after_update: function() {\r\n                var button = this.$('.save-coursepress-setting');\r\n                button.removeClass('cp-progress');\r\n                this.model.set( 'action', 'update_settings' );\r\n                this.model.save();\r\n            }\r\n        });\r\n\r\n        Settings = new Settings( win._coursepress.settings );\r\n\r\n        return Settings;\r\n    });\r\n})();\r\n"]}