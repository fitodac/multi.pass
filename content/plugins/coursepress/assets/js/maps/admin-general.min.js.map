{"version":3,"sources":["admin-general.js"],"names":["window","CoursePress","$","doc","win","self","Events","Backbone","Define","name","callback","call","Cookie","cookie_name","cookies","_coursepress","cookie","hash","get","split","map","this","trim","toObject","set","cookie_value","time","d","expires","Date","getTime","parseInt","path","unset","jQuery","document","Model","extend","url","ajaxurl","defaults","_wpnonce","initialize","on","serverError","prototype","apply","arguments","parse","response","action","success","trigger","data","_","mixin","isTrue","value","selected","isArray","contains","isObject","isBoolean","checked","_getTemplate","template_id","settings","evaluate","interpolate","escape","tpl","length","template","html","View","model","events","change [name]","Request","render","isEmpty","toJSON","$el","updateModel","ev","input","type","currentTarget","attr","is","val","frame","in_frame","change .cp-image-url","click .cp-btn-browse","click .cp-btn-clear","size","title","text","media","select_image","hide","thumbnail_id","src","setElement","insertAfter","thumbnail_box","image_id_input","off","prop","image_url_input","setThumbnail","updateInput","selectImage","wp","library","openMediaFrame","setSelectedImage","open","thumbnail","id","state","first","attributes","sizes","css","clearSelection","DropDownMenu","findDropDown","click .cp-dropdown-btn","menuList","toggleMenu","isOpen","others","not","removeClass","addClass","view","dropdown","each","menu","Menu","el","className","click .btn-ok","appendTo","upload","save","iframe","files"],"mappings":"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","file":"../admin-general.min.js","sourcesContent":["/*! CoursePress - v3.0.0\n * https://premium.wpmudev.org/project/coursepress-pro/\n * Copyright (c) Thu Jul 06 2017; * Licensed GPLv2+ */\n/* jshint -W065 */\r\n/* global jQuery, Backbone */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    window.CoursePress = (function ($, doc, win) {\r\n        var self = {\r\n            Events: Backbone.Events || {}\r\n        };\r\n\r\n        self.Define = function (name, callback) {\r\n\r\n            if ( !self[name] ) {\r\n                self[name] = callback.call(null, $, doc, win);\r\n            }\r\n        };\r\n\r\n        self.Cookie = function( cookie_name ) {\r\n            var cookies, name;\r\n\r\n                cookies = {},\r\n                name = cookie_name + '_' + win._coursepress.cookie.hash;\r\n\r\n            return {\r\n                get: function() {\r\n                    // Get the list of available cookies\r\n                    doc.cookie.split(';').map(this.trim).map(this.toObject);\r\n\r\n                    return cookies[name] ? cookies[name] : null;\r\n                },\r\n                set: function( cookie_value, time ) {\r\n                    var d, expires;\r\n                    d = new Date();\r\n                    expires = d.getTime() + parseInt(time);\r\n\r\n                    doc.cookie = name + '=' + cookie_value + ';expires=' + expires + ';path=' + win._coursepress.cookie.path;\r\n                },\r\n                unset: function() {\r\n\r\n                },\r\n                trim: function(cookie) {\r\n                    cookie = cookie.trim();\r\n                    return cookie;\r\n                },\r\n                toObject: function(cookie) {\r\n                    cookie = cookie.split('=');\r\n                    cookies[cookie[0]] = cookie[1];\r\n                }\r\n            };\r\n        };\r\n\r\n        return self;\r\n    }(jQuery, document, window));\r\n})();\r\n\n/* global CoursePress, Backbone */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    CoursePress.Define('Request', function ($, doc, win) {\r\n        return Backbone.Model.extend({\r\n            url: win._coursepress.ajaxurl + '?action=coursepress_request',\r\n            defaults: {\r\n                _wpnonce: win._coursepress._wpnonce\r\n            },\r\n\r\n            initialize: function () {\r\n                this.on('error', this.serverError, this);\r\n\r\n                Backbone.Model.prototype.initialize.apply(this, arguments);\r\n            },\r\n\r\n            parse: function ( response ) {\r\n                var action = this.get('action');\r\n\r\n                if ( response.success ) {\r\n                    this.trigger('coursepress:success_' + action, response.data);\r\n                } else {\r\n                    this.trigger('coursepress:error_' + action, response.data);\r\n                }\r\n            },\r\n\r\n            serverError: function () {\r\n                // @todo: Show friendly error here\r\n            }\r\n        });\r\n    });\r\n})();\n/* global CoursePress, _, Backbone */\r\n\r\n(function(){\r\n    'use strict';\r\n\r\n    CoursePress.Define('View', function ($) {\r\n        _.mixin({\r\n            isTrue: function (value, selected) {\r\n                if (_.isArray(selected) ) {\r\n                    return _.contains(selected, value);\r\n                } else if (_.isObject(selected ) ) {\r\n                    return !!selected[value];\r\n                } else {\r\n                    if ( _.isBoolean( value ) ) {\r\n                        selected = parseInt(selected, 10) > 0 ? true : false;\r\n                    }\r\n                    return value === selected;\r\n                }\r\n            },\r\n            checked: function (value, selected) {\r\n                return _.isTrue(value, selected) ? 'checked=\"checked\"' : '';\r\n            },\r\n            selected: function (value, selected) {\r\n                return _.isTrue(value, selected) ? 'selected=\"selected\"' : '';\r\n            },\r\n            _getTemplate: function (template_id, data) {\r\n                var settings = {\r\n                        evaluate: /<#([\\s\\S]+?)#>/g,\r\n                        interpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\r\n                        escape: /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g\r\n                    },\r\n                    tpl = $('#' + template_id);\r\n\r\n                if ( tpl.length ) {\r\n                    tpl = _.template( tpl.html(), null, settings);\r\n                }\r\n\r\n                return tpl(data);\r\n            }\r\n        });\r\n\r\n        return Backbone.View.extend({\r\n            template_id: '',\r\n            model: {},\r\n            events: {\r\n                'change [name]': 'updateModel'\r\n            },\r\n            initialize: function () {\r\n                if (arguments && arguments[0]) {\r\n                    this.model = new CoursePress.Request(arguments[0]);\r\n                }\r\n                this.render();\r\n            },\r\n            render: function () {\r\n                if ( ! _.isEmpty(this.template_id) ) {\r\n                    var data = !!this.model.get ? this.model.toJSON() : this.model;\r\n                    this.$el.html(_._getTemplate(this.template_id, data));\r\n                }\r\n\r\n                this.trigger( 'view_rendered' );\r\n\r\n                /**\r\n                 * Trigger whenever the view template is loaded\r\n                 */\r\n                CoursePress.Events.trigger('coursepress:view_rendered', this);\r\n\r\n                return this;\r\n            },\r\n            updateModel: function(ev) {\r\n                var input, name, type, value;\r\n\r\n                input = $(ev.currentTarget);\r\n                name = input.attr('name');\r\n\r\n                if ( ( type = input.attr('type') ) &&\r\n                    _.contains(['checkbox', 'radio'], type ) ) {\r\n                    value = input.is(':checked') ? input.val() : false;\r\n                } else {\r\n                    value = input.val();\r\n                }\r\n\r\n                if ( !!this.model.get ) {\r\n                    this.model.set(name, value);\r\n                } else {\r\n                    this.model[name] = value;\r\n                }\r\n            }\r\n        });\r\n    });\r\n})();\n/* global CoursePress, _, wp */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    CoursePress.Define( 'AddImage', function($, doc, win) {\r\n       var frame, in_frame;\r\n\r\n       // Determine whether or not the selected is from the frame\r\n       in_frame = false;\r\n\r\n       return CoursePress.View.extend({\r\n           template_id: 'coursepress-add-image-tpl',\r\n           input: false,\r\n           events: {\r\n               'change .cp-image-url': 'updateInput',\r\n               'click .cp-btn-browse': 'selectImage',\r\n               'click .cp-btn-clear': 'clearSelection'\r\n           },\r\n           data: {\r\n               size: 'thumbnail',\r\n               title: win._coursepress.text.media.select_image\r\n           },\r\n           initialize: function(input) {\r\n               this.input = input.hide();\r\n\r\n               if ( this.input.data('title') ) {\r\n                   this.data.title = this.input.data('title');\r\n               }\r\n               if ( this.input.data('size') ) {\r\n                   this.data.size = this.input.data('size');\r\n               }\r\n\r\n               this.thumbnail_id = this.input.attr('thumbnail');\r\n               this.render();\r\n           },\r\n           render: function() {\r\n               var html, data, thumbnail_id, value, src;\r\n               thumbnail_id = this.input.data('thumbnail');\r\n               value = src = this.input.val();\r\n\r\n               data = {name: this.input.attr('name'), thumbnail_id: thumbnail_id, value: value};\r\n               html = _._getTemplate(this.template_id, data);\r\n\r\n               this.setElement(html);\r\n               this.$el.insertAfter(this.input);\r\n               this.thumbnail_box = this.$('.cp-thumbnail');\r\n\r\n               this.image_id_input = this.$('.cp-thumbnail-id');\r\n               this.image_id_input.off('change'); // Disable hooked change event\r\n               this.image_id_input.on('change', this.input.prop('change'));\r\n               this.image_url_input = this.$('.cp-image-url');\r\n\r\n               if ( thumbnail_id ) {\r\n                   this.image_id_input.val(thumbnail_id);\r\n               }\r\n               if ( src ) {\r\n                   this.setThumbnail(src);\r\n               }\r\n           },\r\n           updateInput: function(ev) {\r\n               var input = $(ev.currentTarget);\r\n               this.input.val(input.val());\r\n\r\n               this.input.trigger('change');\r\n\r\n               if ( ! in_frame ) {\r\n                   this.image_id_input.val(0);\r\n               }\r\n               this.image_id_input.trigger('change');\r\n           },\r\n           selectImage: function() {\r\n\r\n               if ( ! win.wp || ! win.wp.media ) {\r\n                   return; // @todo: show graceful error\r\n               }\r\n\r\n               if ( ! frame ) {\r\n                   var settings = {\r\n                       frame: 'select',\r\n                       title: this.data.title,\r\n                       library: ['image']\r\n                   };\r\n\r\n                   frame = new wp.media(settings);\r\n\r\n                   frame.on('open', this.openMediaFrame, this);\r\n                   frame.on('select', this.setSelectedImage, this);\r\n               }\r\n               frame.open();\r\n           },\r\n           openMediaFrame: function() {\r\n           },\r\n           setSelectedImage: function() {\r\n               var selected, thumbnail, id, url;\r\n\r\n               selected = frame.state().get('selection').first();\r\n               id = selected.get('id');\r\n\r\n               in_frame = true;\r\n\r\n               if ( !!selected.attributes.sizes.thumbnail ) {\r\n                   thumbnail = selected.attributes.sizes.thumbnail.url;\r\n                   this.setThumbnail(thumbnail);\r\n               }\r\n\r\n               url = selected.attributes.url;\r\n\r\n               // Set correct url value\r\n               this.input.val(url);\r\n\r\n               this.image_url_input.val(url);\r\n               this.image_url_input.trigger('change');\r\n               this.image_id_input.val(id);\r\n               this.image_id_input.trigger('change');\r\n               this.input.trigger('change');\r\n\r\n               // Restore before closing wpmedia\r\n               in_frame = false;\r\n           },\r\n           setThumbnail: function(src) {\r\n               this.thumbnail_box.css('background-image', 'url(' + src + ')');\r\n           },\r\n           clearSelection: function() {\r\n               this.image_id_input.val('');\r\n               this.image_url_input.val('');\r\n               this.input.val('');\r\n               this.thumbnail_box.css('background-image', '');\r\n           }\r\n       });\r\n    });\r\n})();\n/* global CoursePress */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    CoursePress.Define( 'DropDownMenu', function($) {\r\n        var DropDownMenu, findDropDown;\r\n\r\n        DropDownMenu = CoursePress.View.extend({\r\n            events: {\r\n                'click .cp-dropdown-btn': 'toggleMenu'\r\n            },\r\n            render: function() {\r\n                this.menuList = this.$('.cp-dropdown-menu');\r\n            },\r\n            toggleMenu: function() {\r\n                var isOpen = this.menuList.is('.open'),\r\n                    others = $('.cp-dropdown-menu').not(this.menuList);\r\n\r\n                // Closed all other dropdowns\r\n                others.removeClass('open');\r\n                if ( ! isOpen ) {\r\n                    this.menuList.addClass('open');\r\n                } else {\r\n                    this.menuList.removeClass('open');\r\n                }\r\n            }\r\n        });\r\n\r\n        // Find dropdown menus\r\n        findDropDown = function(view) {\r\n            var dropdown = view.$('.cp-dropdown');\r\n\r\n            if ( dropdown.length ) {\r\n                _.each(dropdown, function( menu ) {\r\n                    var Menu = DropDownMenu.extend({el: menu});\r\n                    new Menu();\r\n                });\r\n            }\r\n        };\r\n\r\n        CoursePress.Events.on('coursepress:view_rendered', findDropDown);\r\n\r\n        return DropDownMenu;\r\n    });\r\n})();\n/* global CoursePress */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    CoursePress.Define( 'PopUp', function() {\r\n        return CoursePress.View.extend({\r\n            template_id: 'coursepress-popup-tpl',\r\n            className: 'coursepress-popup',\r\n            events: {\r\n                'click .btn-ok': 'remove'\r\n            },\r\n            render: function() {\r\n                CoursePress.View.prototype.render.apply( this );\r\n\r\n                this.$el.appendTo( 'body' );\r\n            }\r\n        });\r\n    });\r\n})();\n/* global CoursePress */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    CoursePress.Define( 'Upload', function( $, doc, win ) {\r\n        return CoursePress.Request.extend({\r\n            url: win._coursepress.ajaxurl + '?action=coursepress_upload',\r\n            parse: function ( response ) {\r\n                var action = this.get('type');\r\n\r\n                if ( response.success ) {\r\n                    this.trigger('coursepress:success_' + action, response.data);\r\n                } else {\r\n                    this.trigger('coursepress:error_' + action, response.data);\r\n                }\r\n            },\r\n            upload: function() {\r\n                var data = this.toJSON();\r\n\r\n                this.save(data, {\r\n                    iframe: true,\r\n                    files: $(':file'),\r\n                    data: data\r\n                });\r\n            }\r\n        });\r\n    });\r\n})();"]}